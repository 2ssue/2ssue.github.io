<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>세상에 잘못된 경험은 없어</title>
    <description>Programming study records</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 06 Jul 2019 01:14:10 +0900</pubDate>
    <lastBuildDate>Sat, 06 Jul 2019 01:14:10 +0900</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>jekyll 블로그 커스터마이징하기(5)_리뉴얼</title>
        <description>&lt;h3 id=&quot;일단-부딪혀보기의-끝은&quot;&gt;일단 부딪혀보기의 끝은?&lt;/h3&gt;

&lt;p&gt;블로그 스타일을 바꿔보려다가, 아무것도 모를 때 너무 중구난방으로 바꿔놓았더니 총체적 난국이 되었다. 
스타일을 다른 레이아웃과 충돌하는 것을 고려하지 않고 바꿨다가 새로 짜는 코드에서 겹쳐서 이상하게 출력되기도 하고, html코드에 css코드가 섞여서 어디에 스타일을 지정한건지 찾기도 어려웠다.. ;(&lt;/p&gt;

&lt;p&gt;이것저것 건드려볼 수 있었던 것은 매우 좋은 기회였지만, 코드 구성 방식을 알게되니 여러모로 고치기 힘든 상황이 되었다.&lt;br /&gt;
이전부터 고쳐보려고 했는데 엄두가 안나서 미뤄두다가 이번엔 진짜 고쳐보자, 하고 7월의 새로운 마음으로 손대봤는데 이리저리 git history를 확인하는 작업도 여간 힘든 일이 아니었다..&lt;br /&gt;
커스터마이징에 대한 글은 몇 번 안올렸지만 짜잘하게 많은 작업을 거쳤고, 여기까지 바꾸는데 굉장히 오랜 시간이 걸렸는데..ㅠㅠ 많이 아쉬웠다.&lt;/p&gt;

&lt;h3 id=&quot;190702-엉망진창이-된-레이아웃-파일-고치기-시작&quot;&gt;190702 엉망진창이 된 레이아웃 파일 고치기 시작&lt;/h3&gt;

&lt;p&gt;아예 지워볼까 했다가, 그동안의 기록이 지워지는게 너무 아까워서 그러지않기로했다.&lt;br /&gt;
5시간 째 고쳐보려고 이리저리 만져보다가 마음만 앞섰던 나를 반성하며 블로그의 테마를 초기화하기로 마음먹었다.&lt;/p&gt;

&lt;p&gt;다른 프로그램을 개발할 때도 설계의 중요성을 항상 느꼈으면서도 웹을 경험하는 데 의의를 두자는 마음으로 너무 막 다뤘다는 생각이 든다 ㅠㅠ&lt;br /&gt;
웹에 대한 관심을 가지게 해준 것에 감사하며. 지금의 블로그는 스크린샷으로나마 남겨둔다..&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/before_renewal.png&quot; alt=&quot;before1&quot; /&gt;
&lt;img src=&quot;/assets/images/before_renewal2.png&quot; alt=&quot;before2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;암튼, 이번에는 테마에서 제공하는 기능들을 제대로 활용해서, 블로그를 천천히 리뉴얼 해볼 생각이다.&lt;br /&gt;
오래걸리고, 긴 작업이 되겠지만 원하는 모습으로 변할 수 있었으면 좋겠다 :)&lt;/p&gt;

&lt;p&gt;새로운 모습으로 다시 만날 수 있길 기대하며 이만 XD!&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Jul 2019 01:26:24 +0900</pubDate>
        <link>http://localhost:4000/blog/blog_renewal/</link>
        <guid isPermaLink="true">http://localhost:4000/blog/blog_renewal/</guid>
        
        <category>jekyll</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Spring MySQL 연동 오류</title>
        <description>&lt;p&gt;부스트코스 3번째 프로젝트를 위해 강의를 듣고 있는데, Spring JDBC 실습을 위해 연동하는 중 오류가 발생했다.&lt;/p&gt;

&lt;h3 id=&quot;localhost-접속-오류&quot;&gt;localhost 접속 오류&lt;/h3&gt;

&lt;p&gt;첫번째 오류는 localhost로 접속할 수 없다는 오류인데, 이 오류는 MySQL이 실행 중이지 않을 때 주로 나타나는 오류이다.&lt;br /&gt;
cmd를 관리자 권한으로 실행해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;net start mysql80&lt;/code&gt; 명령어를 입력해 실행시켜주면 해결된다.&lt;/p&gt;

&lt;h3 id=&quot;public-key-retriebal-is-not-allowed&quot;&gt;public key retriebal is not allowed&lt;/h3&gt;

&lt;p&gt;그 다음으로 이 오류가 발생했다.&lt;br /&gt;
jdbc url에 &lt;code class=&quot;highlighter-rouge&quot;&gt;allowPublicKeyRetriebal=true&amp;amp;useSSL=false&lt;/code&gt;를 추가해주면 해결된다.&lt;/p&gt;

&lt;p&gt;mysql 8.X 대 버전 이후로 발생하는 오류인데, 보안을 위해 옵션값이 업데이트 된 것 같다.&lt;br /&gt;
데이터베이스의 암호를 네트워크로 전송하기 위해 &lt;strong&gt;TLS&lt;/strong&gt;를 사용하게 되는데, 이를 사용할 수 없을 경우 &lt;strong&gt;RSA 암호화 알고리즘&lt;/strong&gt;을 사용한다.&lt;br /&gt;
이를 위해서 데이터베이스 서버의 공개키를 받아와야하는데, 이 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;allowPublicKeyRetrieval&lt;/code&gt; 옵션이 &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;여야 공개키를 받아올 수 있다.&lt;br /&gt;
하지만 이 옵션을 사용할 경우 암호가 노출될 수 있기 때문에 이의 기본값이 &lt;code class=&quot;highlighter-rouge&quot;&gt;false&lt;/code&gt;로 설정되어있다고 한다.&lt;/p&gt;

&lt;p&gt;하지만 현재 진행할 프로젝트에서는 데이터베이스에 민감한 정보가 없고, 네트워크를 통해 데이터베이스를 연결하는 것이 아니기 때문에 이 옵션을 허용하도록 했다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dbUrl = &quot;jdbc:mysql://localhost:3306/connectdb?useSSL=false&amp;amp;allowPublicKeyRetrieval=true&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 01 Jul 2019 16:46:24 +0900</pubDate>
        <link>http://localhost:4000/project/java_mysql-connect_problem/</link>
        <guid isPermaLink="true">http://localhost:4000/project/java_mysql-connect_problem/</guid>
        
        <category>java</category>
        
        <category>web</category>
        
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>자바스크립트 childNode[n].remove()시 데이터가 남는 문제</title>
        <description>&lt;p&gt;드디어 부스트코스 두번째 프로젝트 코드리뷰를 받았다.&lt;/p&gt;

&lt;p&gt;대부분의 문제를 이해하고, 해결할 수 있었는데 이해할 수 없었던 문제가 하나 있었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/todoList.png&quot; alt=&quot;TodoList&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 페이지에서 doing 컬럼의 일을 done으로 옮기면, 버튼이 사라지는 스크립트를 작성해야 했다.&lt;br /&gt;
그 부분을 나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;cell.childNode[buttonIdx].remove()&lt;/code&gt;로 구현했는데, 코드리뷰 후 데이터가 남는다는 것을 알게 되었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;어디에-데이터가-남는다는거지&quot;&gt;어디에 데이터가 남는다는거지?&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;육안상으로는 전혀 문제가 없었다.&lt;/p&gt;

&lt;p&gt;개발자 도구의 Properties를 확인해봐도 어떤 데이터가 남는다는 건지 알아보기 힘들었다.&lt;br /&gt;
그래서 댓글로 문의를 남기려다가 혹시나 해서 콘솔로 innerHTML을 확인해봤는데, 문제점을 찾을 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/todoList_innerHTML.png&quot; alt=&quot;innerHTML&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;프로젝트 완성하기&lt;/code&gt;는 최초에 페이지가 열렸을 때 HTML 소스를 통해 출력된 cell이다.&lt;br /&gt;
그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;테스트2&lt;/code&gt;는 script를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 태그가 없어지고 다시 출력된 cell이다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;테스트2&lt;/code&gt;에는 아래에 공백이 하나 더 남아있는 것을 확인할 수 있다.&lt;br /&gt;
그냥 보기에는 문제가 없어보이지만, 이러한 공백이 많아지면 문제가 생기게 되기 때문에 이를 해결해 주는 것이 좋다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell#&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;title&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;regdate, name, sequence&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&amp;gt;&lt;/span&gt;&amp;gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 소스에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 태그만 없어지고, 그 자리에 있던 개행문자는 사라지지 않아서 발생하는 문제이다.&lt;br /&gt;
javascript로 이 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;section&amp;gt;&lt;/code&gt;의 childNode들을 조회해보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h3&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;span&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 세개가 있을 것 같지만 그렇지 않다.&lt;br /&gt;
예상과는 다르게 각각의 태그 사이에 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;text&amp;gt;&lt;/code&gt; 노드가 들어가있다. 아마 코드 가독성을 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Enter&lt;/code&gt;를 입력한 부분이 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;text&amp;gt;&lt;/code&gt;로 들어가는 것 같다.&lt;br /&gt;
그러니까 실제론 보이지 않지만, 위 코드는 아래 코드와 같은 상태를 띄어서 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;button&amp;gt;&lt;/code&gt;을 삭제해도 그 뒤의 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;text&amp;gt;&lt;/code&gt;가 남는 것이다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell#&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;text&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;title&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&amp;lt;text&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;regdate, name, sequence&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&amp;lt;text&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&amp;gt;&lt;/span&gt;&amp;gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&amp;lt;text&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&amp;lt;text&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;리뷰어님의 조언으로는 상위 parent를 지우면 어떠냐고 하셨는데 위 코드에서 button의 상위 parent는 section이다.&lt;br /&gt;
이를 지우게 되면 이 cell을 옮기는 것이 아니라 새로 출력을 해야할 것 같아서, 뭔가 낭비라고 판단되었다.&lt;/p&gt;

&lt;p&gt;그래서 일단은 &lt;code class=&quot;highlighter-rouge&quot;&gt;cell.lastChild.remove();&lt;/code&gt;를 통해 마지막 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;text&amp;gt;&lt;/code&gt;를 삭제하고, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;button&amp;gt;&lt;/code&gt;에 대한 remove를 진행했다.&lt;br /&gt;
약간 야매로 한 것 같은 느낌이 있긴 하지만 이 문제를 겪은 사람들이 없는지 검색해도 찾기 쉽지 않았다..&lt;/p&gt;

&lt;p&gt;앞으로 더 공부를 하면서 좋은 방법을 찾을 수 있었으면 좋겠다 ;P&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Jun 2019 10:24:24 +0900</pubDate>
        <link>http://localhost:4000/project/javascript_remove()_problem/</link>
        <guid isPermaLink="true">http://localhost:4000/project/javascript_remove()_problem/</guid>
        
        <category>web</category>
        
        <category>javascript</category>
        
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>MySQL msi installer 설치 오류</title>
        <description>&lt;p&gt;매일 노트북으로 개발하다가, 화면이 너무 작아서 답답했다.&lt;br /&gt;
10인치로 코딩이라니…. 그동안 혹사 당한 눈이 너무 안타까워 데스크탑에도 동일한 환경설정을 하기로 했다.&lt;/p&gt;

&lt;p&gt;tomcat v8.5 설치 완료..&lt;br /&gt;
eclipse EE 설치 완료..
&lt;strong&gt;MySQL 설치 실패!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;어째서 이런 시련을, 노트북과 똑같은 방법으로 msi로 설치를 시작했다. 그런데 왜?!?!&lt;br /&gt;
Server만 설치가 안됐다. 찾아보니 설치 프로그램에서 발생하는 에러같은데, 고치는 방법이 안나왔다. 멘붕인 상태로 그냥 노트북으로 개발해야지! 했다가 이대로는 참을 수 없어서 결국 다시 다음날 데스크탑을 켰다.(그냥 팀뷰어같은걸로 쓸 것을… 두번 환경설정 하는 일은 너무 번거롭다)&lt;/p&gt;

&lt;p&gt;msi로 설치하라고해서 msi로 설치를 한거긴 했지만, MySQL 홈페이지에서는 ZIP Archive로 설치하는 방법도 제공한다.(사실 이게 default) 그래서 이번엔 ZIP Archive로 설치하는 방법을 시도해봤다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;mysql-설치-및-압축-해제&quot;&gt;MySQL 설치 및 압축 해제&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mysql.com/downloads/&quot;&gt;MySQL 사이트&lt;/a&gt;에 접속해서 MySQL Community Server ZIP Archive를 다운로드 한다.&lt;/p&gt;

&lt;p&gt;다운로드가 완료되면 설치하려고 한 위치에 ZIP 파일의 압축을 풀면 된다.&lt;br /&gt;
나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;C:\Program Files\MySQL\mysql-8.0.16-winx64&lt;/code&gt;에 압축을 풀었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;환경-변수-등록&quot;&gt;환경 변수 등록&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/System_variables.png&quot; alt=&quot;환경 변수&quot; /&gt;&lt;/p&gt;

&lt;p&gt;윈도우 검색창에 &lt;code class=&quot;highlighter-rouge&quot;&gt;환경&lt;/code&gt;이라고 검색하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;시스템 환경 변수 편집&lt;/code&gt;을 확인할 수 있다.&lt;br /&gt;
시스템 환경 변수에서 아래 사진과 같이 새로운 환경 변수를 만든다.&lt;/p&gt;

&lt;h4 id=&quot;시스템-변수-새로-만들기&quot;&gt;시스템 변수 새로 만들기&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sv.png&quot; alt=&quot;환경 변수&quot; /&gt;&lt;/p&gt;

&lt;p&gt;경로는 MySQL ZIP 파일을 압축 해제한 경로이다.&lt;/p&gt;

&lt;h4 id=&quot;path-변수-새로-만들기-추가하기&quot;&gt;Path 변수 새로 만들기 (추가하기)&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/path_v.png&quot; alt=&quot;환경 변수&quot; /&gt;&lt;/p&gt;

&lt;p&gt;사진처럼 Path 변수에 MySQL_HOME%\bin을 추가해준다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;서비스-시작을-위한-준비&quot;&gt;서비스 시작을 위한 준비&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;ZIP으로 MySQL을 설치하게되면, 시스템에 MySQL이 서비스 생성이 되지 않아있다.&lt;br /&gt;
때문에 서비스 설치를 해줘야하는데, 설치를 해도 my.ini라는 설정 파일이 없어서 MySQL을 실행할 수 없었다.&lt;/p&gt;

&lt;p&gt;이를 위해 cmd창을 열고, MySQL이 설치된 폴더로 이동한다. (cd [설치된 경로])&lt;br /&gt;
경로로 이동한 다음에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqld --initilaize-insecure&lt;/code&gt; 명령을 실행한다.&lt;/p&gt;

&lt;p&gt;이 명령을 실행하고 폴더에 data 폴더가 생기면 성공이다!&lt;br /&gt;
만약 에러가 발생해서 생성이 안됐다면, 다시한번 실행해본다. (명령을 두번 실행했더니 설치가 됐다..)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;서비스-설치&quot;&gt;서비스 설치&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;이제 끝이 보인다!&lt;/p&gt;

&lt;p&gt;cmd 창에 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqld --install&lt;/code&gt;을 입력한다.&lt;br /&gt;
설치가 성공적으로 끝나면, Service successfully installed 를 볼 수 있다.&lt;br /&gt;
만약 이미 설치되어있는데 잘 되지 않아 재설치를 원한다면, &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqld --remove&lt;/code&gt; 후 install 하면된다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;서비스-시작&quot;&gt;서비스 시작&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;cmd 창에 &lt;code class=&quot;highlighter-rouge&quot;&gt;net start mysql&lt;/code&gt;을 입력한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;MySQL 서비스를 시작합니다…
MySQL 서비스가 잘 시작되었습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;성공!&lt;br /&gt;
제대로 되는지 확인하려면, &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql -uroot -p&lt;/code&gt;를 입력하고 엔터를 두번 친다. (패스워드를 설정한 적이 없으므로 패스워드를 그냥 넘어가기 위함이다)&lt;/p&gt;

&lt;p&gt;여기서 cmd창이 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&amp;gt;&lt;/code&gt; 시작하면 MySQL로 접속이 성공한 것이다. 이제 MySQL을 정상적으로 사용할 수 있다 :)&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Jun 2019 16:34:24 +0900</pubDate>
        <link>http://localhost:4000/programming_knowledge/mysql_install-error/</link>
        <guid isPermaLink="true">http://localhost:4000/programming_knowledge/mysql_install-error/</guid>
        
        <category>interview</category>
        
        
        <category>Programming_Knowledge</category>
        
      </item>
    
      <item>
        <title>The Servlet name already exists 문제</title>
        <description>&lt;p&gt;eclipse IDE에서 Servlet을 삭제하고, 다시 작성하려고 했더니 이미 존재한다며 만들어지지 않았다.&lt;br /&gt;
분명 삭제한건데 왜 그런걸까 해서 검색해봤더니 web.xml 파일 때문이었다.&lt;/p&gt;

&lt;p&gt;web.xml 파일은 생성하는 Servlet에 대한 정보는 자동으로 생성하지만, 삭제한 경우는 남겨둔다.&lt;br /&gt;
때문에 기존에 있던 이름의 Servlet을 재 생성하려면, &lt;code class=&quot;highlighter-rouge&quot;&gt;servlet&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;servletmapping&lt;/code&gt;을 지우고 생성하면 된다.&lt;/p&gt;

&lt;p&gt;간단한 해결법이 있는데 항상 돌아서 도착한다..&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Jun 2019 12:06:24 +0900</pubDate>
        <link>http://localhost:4000/project/servlet_exists/</link>
        <guid isPermaLink="true">http://localhost:4000/project/servlet_exists/</guid>
        
        <category>web</category>
        
        
        <category>Project</category>
        
      </item>
    
      <item>
        <title>[프로그래머스] 다리를 지나는 트럭</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42583?language=java&quot;&gt;프로그래머스 코딩테스트 연습_스택/큐_다리를 지나는 트럭&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;블로그에 가장 방문자가 많은 포스트가 이 포스트이다.&lt;br /&gt;
그래서 종종 읽어보는데 너무 복잡하게 푼 것 같아서 다시 풀어보았다.&lt;/p&gt;

&lt;h2 id=&quot;변경-풀이-190611&quot;&gt;변경 풀이 (19.06.11)&lt;/h2&gt;

&lt;p&gt;트럭은 가장 앞에 들어온 트럭이 가장 먼저 나간다. 따라서 Queue를 사용해 계산했다.&lt;/p&gt;

&lt;p&gt;트럭이 들어가는 것은 따로 저장하지 않고 다리에서 대기하는 시간만 큐에 저장했다.&lt;br /&gt;
트럭이 들어가는 것은 이를 계산할 &lt;code class=&quot;highlighter-rouge&quot;&gt;idx&lt;/code&gt;가 존재하기 때문에 굳이 또 한번의 작업이 필요하지 않다고 생각했기 때문이다.&lt;br /&gt;
또, 나가는 트럭은 항상 맨 앞의 트럭이기 때문에 가장 앞의 대기 시간을 확인하기만 하면 나가는 트럭을 쉽게 처리할 수 있다고 생각해 Queue를 사용했다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;풀이과정&quot;&gt;풀이과정&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;코드의 동작 방식은 간단하다.&lt;/p&gt;

&lt;p&gt;다리에 현재 가르키는 트럭이 들어가도 되는지 확인하고, 들어갈 수 있다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;idx&lt;/code&gt;가 다음 트럭을 가리키게 한 뒤 현재 트럭이 들어간다. 이 때 들어가는 값은 트럭의 무게 값이 아닌 트럭의 이동 시간 값이다.&lt;/p&gt;

&lt;p&gt;트럭이 다리 안으로 들어가면 &lt;code class=&quot;highlighter-rouge&quot;&gt;increaseTime()&lt;/code&gt; 함수를 통해 트럭의 이동시간을 늘린다. 이 때 트럭의 이동시간이 &lt;code class=&quot;highlighter-rouge&quot;&gt;bridge_length&lt;/code&gt;와 같아지면 트럭을 다리에서 빼낸다.&lt;/p&gt;

&lt;p&gt;이 같은 동작이 &lt;code class=&quot;highlighter-rouge&quot;&gt;idx&lt;/code&gt;가 전체 트럭의 수와 같아질 때까지 계속 반복된다.&lt;br /&gt;
그런데 반복문 안에서는 마지막 트럭의 이동시간이 계산되지 않기 때문에, 반복문이 종료되면 마지막 트럭의 이동시간을 더해준 뒤 모든 동작을 마무리 한다.&lt;/p&gt;

&lt;p&gt;이 코드는 bridge_length가 2이고 weight가 10, truck이 {7,4,5,6} 일 때 아래와 같이 동작한다.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;초&lt;/td&gt;
      &lt;td&gt;다리를 나간 트럭&lt;/td&gt;
      &lt;td&gt;다리에 있는 트럭&lt;/td&gt;
      &lt;td&gt;다리 상주 시간&lt;/td&gt;
      &lt;td&gt;대기 트럭&lt;/td&gt;
      &lt;td&gt;idx&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;{7}&lt;/td&gt;
      &lt;td&gt;{1}&lt;/td&gt;
      &lt;td&gt;4,5,6&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;{7}&lt;/td&gt;
      &lt;td&gt;{2}&lt;/td&gt;
      &lt;td&gt;4,5,6&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;{7}&lt;/td&gt;
      &lt;td&gt;{4}&lt;/td&gt;
      &lt;td&gt;{1}&lt;/td&gt;
      &lt;td&gt;5, 6&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;{7}&lt;/td&gt;
      &lt;td&gt;{4,5}&lt;/td&gt;
      &lt;td&gt;{2,1}&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;{7,4}&lt;/td&gt;
      &lt;td&gt;{5}&lt;/td&gt;
      &lt;td&gt;{2}&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;{7,4,5}&lt;/td&gt;
      &lt;td&gt;{6}&lt;/td&gt;
      &lt;td&gt;{1}&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;이후 마지막 트럭이 다리를 지나는 시간이 반복문을 통해 계산되지 않았으므로, 이 값을 직접 answer에 더해준다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.LinkedList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;increaseTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queueSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queueSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bridge_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;truck_weights&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bridge_weight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;truck_time&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinkedList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;truck_weights&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
             
            &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;curTruck&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;truck_weights&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
             
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bridge_weight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;curTruck&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;bridge_weight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;curTruck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;truck_time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
             
            &lt;span class=&quot;n&quot;&gt;increaseTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;truck_time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
             
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;truck_time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bridge_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;bridge_weight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;truck_weights&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;truck_time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()];&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;truck_time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
         
        &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bridge_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
         
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;이전-풀이-190301&quot;&gt;이전 풀이 (19.03.01)&lt;/h2&gt;

&lt;p&gt;가장 먼저 들어온 트럭이 가장 먼저 나가게 되는 구조이다. 따라서 Queue를 사용하였다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;변수-선언&quot;&gt;변수 선언&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Queue에 머물러 있는 시간을 계산하기 위한 배열&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;front&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Queue에 들어가있는 맨 앞 원소의 배열 인덱스&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Queue에 들어가있는 맨 마지막 원소의 배열 인덱스&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//시간을 계산할 변수&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;풀이과정-1&quot;&gt;풀이과정&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;0번째 배열은 무조건 들어갈 수 있기 때문에 반복문 전에 미리 Queue에 넣는다.&lt;/em&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;front&lt;/code&gt; 부터 &lt;code class=&quot;highlighter-rouge&quot;&gt;rear&lt;/code&gt; 까지 &lt;code class=&quot;highlighter-rouge&quot;&gt;delay[i]&lt;/code&gt;값을 증가시키면서 &lt;code class=&quot;highlighter-rouge&quot;&gt;delay[i]&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;bridge_length&lt;/code&gt;보다 큰지 확인한다.&lt;br /&gt;
만약 &lt;code class=&quot;highlighter-rouge&quot;&gt;bridge_length&lt;/code&gt;보다 커지면, Queue에서 빼고 그 원소가 빠졌음을 알기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;front&lt;/code&gt;값을 증가시킨다.&lt;/p&gt;

&lt;p&gt;그 다음으로는 트럭이 더 들어갈 수 있는지 확인한다.&lt;/p&gt;

&lt;p&gt;Queue에 들어가있는 원소의 합과 다음 원소가 &lt;code class=&quot;highlighter-rouge&quot;&gt;weight&lt;/code&gt;이하인지 확인한다.&lt;br /&gt;
만약 &lt;code class=&quot;highlighter-rouge&quot;&gt;weight&lt;/code&gt;이하라면 그 원소를 Queue에 넣고, &lt;code class=&quot;highlighter-rouge&quot;&gt;rear&lt;/code&gt;값과 &lt;code class=&quot;highlighter-rouge&quot;&gt;delay[rear]&lt;/code&gt;를 증가시킨다.&lt;/p&gt;

&lt;p&gt;Queue가 비면 반복문을 종료한다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.Queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.LinkedList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Solution&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;    
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bridge_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;truck_weights&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;Queue&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;que&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LinkedList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;truck_weights&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;front&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rear&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;que&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;truck_weights&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]++;&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;que&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())){&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;front&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++){&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]++;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bridge_length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;que&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;front&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rear&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;truck_weights&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)){&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;truck_weights&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;front&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;truck_weights&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rear&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;que&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;truck_weights&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]);&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]++;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;second&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 11 Jun 2019 13:56:24 +0900</pubDate>
        <link>http://localhost:4000/algorithm/programmers_42583/</link>
        <guid isPermaLink="true">http://localhost:4000/algorithm/programmers_42583/</guid>
        
        <category>programmers</category>
        
        
        <category>algorithm</category>
        
      </item>
    
      <item>
        <title>추상 클래스와 인터페이스의 차이</title>
        <description>&lt;p&gt;자바를 다시 공부하기 시작하면서, 추상 클래스와 인터페이스가 대체 무슨 차이가 있는지 잘 모르겠다는 생각이 들었다.&lt;br /&gt;
그래서 이번에는 이 둘이 어떤 차이가 있는지 알아보려고 한다.&lt;/p&gt;

&lt;h3 id=&quot;공통점&quot;&gt;공통점&lt;/h3&gt;

&lt;p&gt;추상 클래스와 인터페이스는 둘 다 함수에 대한 선언만 하고, 구현은 하지 않는다는 공통점이 있다.&lt;br /&gt;
구현된 객체가 아니기 때문에, 구현 클래스가 있어야 객체로 생성이 가능하다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;목적만 보면 추상 클래스와 인터페이스 모두 추상 메소드 구현을 강제한다는 점에서 비슷하다.&lt;br /&gt;
implements, extends를 통해 사용한 다는 차이만 있는 것 같기도 하다.&lt;/p&gt;

&lt;p&gt;기존에 JDK7까지는 명확한 차이가 존재했다.&lt;br /&gt;
추상 클래스에서는 추상 메소드와 일반 메소드를 모두 구현할 수 있었는데 인터페이스는 추상 메소드 작성만 가능했기 때문이다.&lt;/p&gt;

&lt;p&gt;그런데 JDK8이 되면서 인터페이스에 default 메소드가 추가되면서, 일반 메소드도 구현이 가능해졌다.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;그렇다면 대체 어느 부분에서 차이가 있는 것일까?&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;차이점&quot;&gt;차이점&lt;/h3&gt;

&lt;p&gt;먼저 아래 클래스의 접근 제한자에 차이가 발생한다.&lt;/p&gt;

&lt;p&gt;인터페이스에서 상수의 기본 형태는 public static final이고, 메소드는 public abstract이다.&lt;br /&gt;
따라서 public 이를 implements한 클래스의 메소드도 모두 public 형태이다.&lt;/p&gt;

&lt;p&gt;그러나 추상 클래스에서는 다양한 접근 제한자(public, protected, private)를 가질 수 있다.&lt;br /&gt;
따라서 추상 클래스에서는 다양한 타입의 접근 제한자를 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;또한 다중 사용에 대한 차이도 있다.&lt;/p&gt;

&lt;p&gt;인터페이스 구현 클래스는 여러 개의 인터페이스를 참조해 함께 구현할 수 있지만, 추상 클래스의 자식 클래스는 다른 클래스를 다중 상속 받아 사용할 수 없다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;그런데 어떨 때 추상 클래스를 사용하고, 인터페이스를 사용하는 걸까?&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;사용-위치&quot;&gt;사용 위치&lt;/h3&gt;
&lt;h4 id=&quot;추상-클래스&quot;&gt;추상 클래스&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;public 이외의 접근 제어자가 필요한 경우&lt;/li&gt;
  &lt;li&gt;non-static, non-final 필드가 필요한 경우&lt;/li&gt;
  &lt;li&gt;관련성이 높은 클래스 간 코드를 공유하려는 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;인터페이스&quot;&gt;인터페이스&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;다중 사용을 허용하고 싶은 경우&lt;/li&gt;
  &lt;li&gt;관련성이 낮은 클래스 간 메소드를 공유하려는 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;관련성이 높고 낮은 클래스라는 것이 좀 모호하다.&lt;br /&gt;
JDK의 클래스를 통해 예시로 어떠한 경우인지 알아보자.&lt;/p&gt;

&lt;p&gt;추상 클래스의 대표적 예는 Collections Framwork의 &lt;code class=&quot;highlighter-rouge&quot;&gt;AbstractCollection&lt;/code&gt;이다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;AbstractCollection&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;AbstractList, AbstractMap, AbstractSet, AbstractQueue&lt;/code&gt; 등의 자식 추상 클래스를 가져 &lt;code class=&quot;highlighter-rouge&quot;&gt;add, clear, isEmpty, iterator&lt;/code&gt; 등의 메소드를 공유하고 있다.&lt;br /&gt;
Collection이라는 관련성이 높은 클래스끼리 비슷한 동작을 공유한다.&lt;/p&gt;

&lt;p&gt;인터페이스의 대표적 예는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Iterable&lt;/code&gt;이 있다.&lt;br /&gt;
이 인터페이스를 &lt;code class=&quot;highlighter-rouge&quot;&gt;AbstractCollection, ArrayDeque, SQLException, SQLWarning, Stack, Vector&lt;/code&gt; 등 많은 클래스들이 implements하고 있다.&lt;br /&gt;
하지만 이 클래스들은 순차적으로 데이터가 필요하다는 특징 외에는 관련이 없는 클래스이다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;예시를 통해 확인해보니 차이가 조금 보인다.&lt;br /&gt;
예시를 들려고 API를 한번 살펴보면서, 새삼 대단하다는 생각을 했다.&lt;br /&gt;
물론 한번에 작성된 코드들은 아니지만 설계의 중요성도 느낄 수 있었다.&lt;/p&gt;

&lt;p&gt;아직 어디에 추상 클래스를 쓰고 인터페이스를 쓸 지 정확히 구분할 순 없을 것 같지만 쓰다보면 좀 더 분명히 알 수 있을 것 같다.&lt;br /&gt;
객체 지향의 세계는 알면 알수록 신기하다 :)&lt;/p&gt;
</description>
        <pubDate>Thu, 30 May 2019 11:08:24 +0900</pubDate>
        <link>http://localhost:4000/programming_knowledge/190530_PJI/</link>
        <guid isPermaLink="true">http://localhost:4000/programming_knowledge/190530_PJI/</guid>
        
        <category>interview</category>
        
        <category>java</category>
        
        
        <category>Programming_Knowledge</category>
        
      </item>
    
      <item>
        <title>[이것이 자바다] 08 인터페이스 확인문제</title>
        <description>&lt;p&gt;이 챕터에서 중요한 부분은 다형성, 그리고 추상 클래스와 인터페이스 간의 차이라고 생각한다.&lt;br /&gt;
다형성 부분은 지난번 포스트 &lt;a href=&quot;https://2ssue.github.io/programming_knowledge/190502_PJI/&quot;&gt;다형성이란&lt;/a&gt;에 정리한 것을 참고하면 될 것 같다.&lt;br /&gt;
추상 클래스와 인터페이스 간의 차이는 &lt;a href=&quot;https://2ssue.github.io/categories/#programming-knowledge&quot;&gt;Programming_Knowledge&lt;/a&gt;카테고리에 따로 정리할 예정이다.&lt;/p&gt;

&lt;p&gt;이 주제 외에도 JDK8에 들어서 인터페이스에 새로 생긴 기능인 default메소드, static메소드도 알아둘 필요가 있을 것 같다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;확인-문제&quot;&gt;확인 문제&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;인터페이스에-대한-설명으로-틀린-것은&quot;&gt;인터페이스에 대한 설명으로 틀린 것은?&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;인터페이스는 객체 사용 설명서 역할을 한다.&lt;/li&gt;
  &lt;li&gt;구현 클래스가 인터페이스의 추상 메소드에 대한 실체 메소드를 가지고 있지 않으면 추상 클래스가 된다.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;&lt;strong&gt;인터페이스는 인스턴스 필드를 가질 수 있다.&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;구현 객체는 인터페이스 타입으로 자동 변환된다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;인터페이스는 상수, 메소드만 가질 수 있다.&lt;/p&gt;

&lt;h4 id=&quot;인터페이스의-다형성과-거리가-먼-것은&quot;&gt;인터페이스의 다형성과 거리가 먼 것은?&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;필드가 인터페이스 타입일 경우 다양한 구현 객체를 대입할 수 있다.&lt;/li&gt;
  &lt;li&gt;매개 변수가 인터페이스 타입일 경우 다양한 구현 객체를 대입할 수 있다.&lt;/li&gt;
  &lt;li&gt;배열이 인터페이스 타입일 경우 다양한 구현 객체를 저장할 수 있다.&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;&lt;strong&gt;구현 객체를 인터페이스 타입으로 변환하려면 강제 타입 변환을 해야 한다.&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;구현 객체는 인터페이스 타입으로 자동 타입 변환된다.&lt;br /&gt;
강제 타입 변환을 해야하는 경우는 인터페이스 타입이 구현 객체 타입이 돼야할 때 이다.&lt;/p&gt;

&lt;h4 id=&quot;다음-soundable-인터페이스를-통해-야옹과-멍멍을-출력하는-클래스를-작성하시오&quot;&gt;다음 Soundable 인터페이스를 통해 ‘야옹’과 ‘멍멍’을 출력하는 클래스를 작성하시오&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Soundable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Cat&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Soundable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;야옹&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Dog&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Soundable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;멍멍&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;다음-코드와-아래-출력을-참고해-dataaccessobject-인터페이스를-참조한-oracledao-mysqldao-클래스를-작성하시오&quot;&gt;다음 코드와 아래 출력을 참고해 DataAccessObject 인터페이스를 참조한 OracleDao, MySqlDao 클래스를 작성하시오&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;Oracle DB에서 검색&lt;br /&gt;
Oracle DB에 삽입&lt;br /&gt;
Oracle DB를 수정&lt;br /&gt;
Oracle DB에서 삭제&lt;br /&gt;
MySql DB에서 검색&lt;br /&gt;
MySql DB에 삽입&lt;br /&gt;
MySql DB를 수정&lt;br /&gt;
MySql DB에서 삭제&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DaoExample&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dbWork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataAccessObject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;dao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;dao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;dao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;dao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;dbWork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OracleDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;dbWork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MySqlDao&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;OracleDao&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataAccessObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Oracle DB에서 검색&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Oracle DB에 삽입&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Oracle DB를 수정&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Oracle DB에서 삭제&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MySqlDao&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataAccessObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MySql DB에서 검색&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MySql DB에 삽입&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MySql DB를 수정&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MySql DB에서 삭제&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;action-인터페이스를-활용한-익명-구현-객체를-만들어-아래와-같은-출력이-나오도록-코드를-작성하시오&quot;&gt;Action 인터페이스를 활용한 익명 구현 객체를 만들어 아래와 같은 출력이 나오도록 코드를 작성하시오&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;복사를 합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ActionExample&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;Action&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;복사를 합니다&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.);&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 29 May 2019 09:46:24 +0900</pubDate>
        <link>http://localhost:4000/programming_language/this_is_java_08/</link>
        <guid isPermaLink="true">http://localhost:4000/programming_language/this_is_java_08/</guid>
        
        <category>java</category>
        
        
        <category>Programming_Language</category>
        
      </item>
    
      <item>
        <title>부스트코스 코드리뷰 후기</title>
        <description>&lt;p&gt;어제 처음으로 부스트코스 웹 프로젝트 1번에 대해 코드리뷰를 신청했다.&lt;br /&gt;
그리고 오늘 코드리뷰가 드디어 완료되었다 XD (아마 어제 완료된 것 같지만.. 오늘 확인했다)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/code_review.png&quot; alt=&quot;codeReview&quot; /&gt;&lt;/p&gt;

&lt;p&gt;코드의 동작이나, 전체적인 구조에 대해 피드백을 받아본 적은 있었는데 이렇게 코드 하나하나를 리뷰받아보기는 처음이다.&lt;br /&gt;
코드를 전부 보여주려고 생각하니까 뭔가 조금 치부를 보여주는 것 같아 부끄럽기도 했는데, 막상 받고나니 받길 잘했다는 생각이 든다.&lt;/p&gt;

&lt;p&gt;특히 이 코드리뷰 부분들이 혼자서는 전혀 파악하지 못했을 것 같아서 더 좋은 것 같다.&lt;br /&gt;
현업에서는 팀 작업을 하기 때문에 불필요한 코드, 코드 작성 시 유의사항에 대해서도 알 수 있어서 좋았다.&lt;br /&gt;
또 코드리뷰라고해서 잘못한 부분에 대해서만 평가를 해주시는 게 아니었다.&lt;br /&gt;
잘한 부분에 대한 칭찬도 적어주셔서 뭔가 뿌듯하기도 하고 자신감이 생기는 것 같다.&lt;br /&gt;
코드리뷰 받는 맛에 프로젝트를 하게 될 수도 있을 것 같은 느낌ㅋㅋㅋㅋ&lt;/p&gt;

&lt;p&gt;가격이 약간 부담스럽기도 했지만 학원보다는 싸니까 하는 생각으로 다음 코드리뷰도 신청했다. X)&lt;br /&gt;
다음 코드리뷰엔 어떤 피드백을 해주실 지 궁금하다 :)!&lt;/p&gt;
</description>
        <pubDate>Tue, 28 May 2019 12:06:24 +0900</pubDate>
        <link>http://localhost:4000/tmi/edwith_first_codereview/</link>
        <guid isPermaLink="true">http://localhost:4000/tmi/edwith_first_codereview/</guid>
        
        <category>review</category>
        
        
        <category>TMI</category>
        
      </item>
    
      <item>
        <title>190527_DailyNote</title>
        <description>&lt;h4 id=&quot;my-trivial-today&quot;&gt;&lt;em&gt;My Trivial Today&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;오랜만에 DailyNote를 올린다.&lt;/p&gt;

&lt;p&gt;해보고 싶은 건 많고, 해야할 것도 많고!&lt;br /&gt;
머리속이 맨날 뒤죽박죽이지만 정해놓은 하나는 꼭 완수해보려고 노력 중이다.&lt;/p&gt;

&lt;p&gt;그리하야 오늘 완성한 것은 드디어 웹 공부의 첫 결실, 부스트코스 웹 프로그래밍의 첫번째 프로젝트다.&lt;/p&gt;

&lt;p&gt;강의를 들으면서 지난날 개발자 도구로 뒤죽박죽 블로그 스타일을 바꿨던 기억이 떠올랐다.&lt;br /&gt;
너무 막바꿨던 것 같아서, 아마 강의를 좀 더 듣고나면 몇몇 군데를 수정해야 할 것 같다.&lt;br /&gt;
CSS와 HTML이 뒤죽박죽~&lt;/p&gt;

&lt;p&gt;프로젝트를 하면서 CSS가 기억해야할 것이 많아서 조금 어려웠다.&lt;br /&gt;
계속 하다보면 외워지긴 하겠지만, 계속 개발자 도구 켜서 옵션값 확인하고..&lt;br /&gt;
이번 프로젝트에서 백엔드는 코드가 짧아서 별로 할 게 없었다. 백은 거의 10분도 안되서 끝난 것 같다. 잘 짠건진 모르겠지만 XD&lt;/p&gt;

&lt;p&gt;다음 프로젝트는 백엔드에 좀 더 무게가 있었으면 좋겠다! 프론트도 재밌지만 백엔드를 더 알아가보고 싶다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;today-i-did&quot;&gt;&lt;em&gt;Today I Did&lt;/em&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;부스트코스 &lt;a href=&quot;https://github.com/2ssue/BoostCourse_Web/tree/master/first_project/aboutme&quot;&gt;웹 프로그래밍 프로젝트 1&lt;/a&gt; 완성 및 코드리뷰 신청&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 27 May 2019 16:13:24 +0900</pubDate>
        <link>http://localhost:4000/tmi/190527_DN/</link>
        <guid isPermaLink="true">http://localhost:4000/tmi/190527_DN/</guid>
        
        <category>daily</category>
        
        
        <category>TMI</category>
        
      </item>
    
  </channel>
</rss>