<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-04-02T20:41:45+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">잔디밭 만들기 프로젝트</title><subtitle>This is a practice version blog!</subtitle><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><entry><title type="html">190401_PPI</title><link href="http://localhost:4000/interview/190401_PPI/" rel="alternate" type="text/html" title="190401_PPI" /><published>2019-04-01T21:46:24+09:00</published><updated>2019-04-01T21:46:24+09:00</updated><id>http://localhost:4000/interview/190401_PPI</id><content type="html" xml:base="http://localhost:4000/interview/190401_PPI/">&lt;p&gt;오늘도 네트워크와 관련된 문제이다 :)&lt;/p&gt;

&lt;h4 id=&quot;http에서-get과-post의-차이는&quot;&gt;HTTP에서 GET과 POST의 차이는?&lt;/h4&gt;

&lt;p&gt;두 방식 모두 HTTP 프로토콜을 이용해 서버에 요청을 할 때 사용한다.&lt;br /&gt;
하지만 둘의 특징을 이해하고 기술 목적에 맞게 사용해야 한다.&lt;/p&gt;

&lt;h5 id=&quot;get&quot;&gt;GET&lt;/h5&gt;

&lt;p&gt;요청하는 데이터를 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP Request Message&lt;/code&gt;의 Header url에 담아 전송한다.&lt;br /&gt;
url에 데이터를 담아서 전송하기 때문에 전송할 수 있는 데이터의 크기가 제한적이며,&lt;br /&gt;
민감한 데이터에 대해 요청할 경우 url에 요청 정보가 노출되므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; 방식은 부적절하다.&lt;/p&gt;

&lt;h5 id=&quot;post&quot;&gt;POST&lt;/h5&gt;

&lt;p&gt;요청하는 데이터를 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP Message의 Body&lt;/code&gt;에 담아 전송한다.&lt;br /&gt;
데이터를 body에 담아 보내기 때문에 GET 방식보다 안전하고 더 많은 데이터를 요청할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt;방식은 데이터를 가져오기만 하지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt;는 서버의 상태를 변경하기 위해서도 사용한다.&lt;/p&gt;

&lt;h4 id=&quot;nat란-무엇인가&quot;&gt;NAT란 무엇인가?&lt;/h4&gt;

&lt;p&gt;사설 IP가 외부 인터넷에 접속하기 위해서는 공인 IP주소를 가져야 하는데,&lt;br /&gt;
이 때 사설 IP를 공인 IP로 바꿔주는 데 사용하는 것이 IP주소 변환기인 &lt;code class=&quot;highlighter-rouge&quot;&gt;NAT(Network Address Translation)&lt;/code&gt;이다.&lt;br /&gt;
외부에서 들어오는 공인 IP 주소 또한 들어올 때 사설 IP 주소로 변환한다.&lt;br /&gt;
이렇게 주소 변환과정이 반드시 필요하기 때문에, 보안성이 좋다는 Side Effect가 있다.&lt;br /&gt;
NAT는 공인 IP 주소와 사설 IP 주소를 분리함으로써, IPv4의 주소 고갈 문제를 연장시켰다.&lt;/p&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="daily" /><summary type="html">오늘도 네트워크와 관련된 문제이다 :) HTTP에서 GET과 POST의 차이는?</summary></entry><entry><title type="html">190401_DN</title><link href="http://localhost:4000/dn/190401_DN/" rel="alternate" type="text/html" title="190401_DN" /><published>2019-04-01T21:43:24+09:00</published><updated>2019-04-01T21:43:24+09:00</updated><id>http://localhost:4000/dn/190401_DN</id><content type="html" xml:base="http://localhost:4000/dn/190401_DN/">&lt;p&gt;&lt;em&gt;190401 Daily Note&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;mtt&quot;&gt;MTT&lt;/h3&gt;
&lt;h6 id=&quot;my-trivial-today&quot;&gt;&lt;em&gt;My Trivial Today&lt;/em&gt;&lt;/h6&gt;

&lt;p&gt;주말부터 오늘까지는 Refresh의 의미로 쉬었다.&lt;br /&gt;
뭔가 딱히 한건 없지만 괜히 몸이 피곤한 것 같아서&lt;br /&gt;
쉬어보기로 했당.&lt;/p&gt;

&lt;p&gt;내일부턴 다시 힘내서 해야지!&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;tid&quot;&gt;TID&lt;/h3&gt;
&lt;h6 id=&quot;today-i-did&quot;&gt;&lt;em&gt;Today I Did&lt;/em&gt;&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;영어 회화 공부하기&lt;/li&gt;
  &lt;li&gt;Git 강의 듣기&lt;br /&gt;
Git 강의가 은근히 재밌다. 이고잉님 강의 재미써..&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;siw&quot;&gt;SIW&lt;/h3&gt;
&lt;h6 id=&quot;someday-i-will&quot;&gt;&lt;em&gt;Someday I Will&lt;/em&gt;&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;블로그 테마 바꾸기&lt;br /&gt;
카테고리 우측에 메뉴 만든 것 넘나리 뿌듯!&lt;br /&gt;
포스트 제목 밑에 여백 넣는 건 좀 더 빨리 성공하길 바란다.&lt;/li&gt;
  &lt;li&gt;알고리즘 하루에 2개씩은 풀기&lt;/li&gt;
  &lt;li&gt;프로젝트 정리하기&lt;/li&gt;
&lt;/ol&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="daily" /><summary type="html">190401 Daily Note</summary></entry><entry><title type="html">jekyll 블로그 카테고리 스타일 바꾸기!</title><link href="http://localhost:4000/blog/category&tag_style/" rel="alternate" type="text/html" title="jekyll 블로그 카테고리 스타일 바꾸기!" /><published>2019-03-30T02:10:24+09:00</published><updated>2019-03-30T02:10:24+09:00</updated><id>http://localhost:4000/blog/category&amp;tag_style</id><content type="html" xml:base="http://localhost:4000/blog/category&amp;tag_style/">&lt;p&gt;감격.. 드디어 원하던 스타일의 일부를 변경하는 데 성공했다!&lt;br /&gt;
카테고리와 태그 메뉴에서 메뉴들이 우측에 떴으면 좋겠다고 생각했는데, 1시간의 사투 끝에 바꿀 수 있었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;개발자모드로-학습하기&quot;&gt;개발자모드로 학습하기&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;개발자 모드로 뒤적거리다가 html을 변경해줘야 한다는 걸 알게됐다.&lt;br /&gt;
html 초짜라서 태그도 못알아보지만 일단 배껴보기로 결심..&lt;br /&gt;
오랜만에 jekyll server를 가동시켰다.&lt;/p&gt;

&lt;p&gt;사투 끝에 layout 폴더에서 categories.html파일과 tags.html 파일을 변경해봤다.&lt;br /&gt;
개발자 모드로 toc이 위치한 곳을 확인했더니 aside sidebar__right스타일로 감싸져있는 것을 볼 수 있었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;우측으로-옮기기-성공&quot;&gt;우측으로 옮기기 성공!&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;그래서 여기서도 같은 스타일로 감싸봤는데, archive 타입에선 이렇게 해도 패딩값 때문에 보이질 않았다.&lt;br /&gt;
후.. 또 한숨을 쉬었다가 html 상단의 layout을 single로 바꿔보았다.&lt;/p&gt;

&lt;p&gt;그런데 single 타입으로 바꾸니까 딱! 드디어 우측으로 메뉴가 변경된 것이다 ㅠ_ㅠ!!!&lt;/p&gt;

&lt;p&gt;모바일에서 가독성은 조금 떨어질 지 모르겠지만 대만족 XD!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;내가-원하는건-grid-스타일이-아니야&quot;&gt;내가 원하는건 grid 스타일이 아니야!&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;그런데 taxonomy display옵션이 grid라서 우측에 떠도 내가 원하던 일자 모양이 아니었다.&lt;br /&gt;
또 개발자 모드를 켜서 확인에 들어갔다. 그저 빛.. 개발자 모드는 짱이다..&lt;br /&gt;
Style-display옵션이 grid인 것을 풀어봤더니 드디어 일자 모양이 되었다.&lt;/p&gt;

&lt;p&gt;그런데 문제는 그게 어디서 정의되었는지를 모른다는 것…&lt;br /&gt;
또 입술을 괴롭히면서 폴더를 뒤적거리기 시작했다. 어딘가엔 있을거야!!!&lt;/p&gt;

&lt;p&gt;여기저기 뒤적거리다가 _sass 폴더에서 _page.scss 파일을 뒤적거린 결과 taxonomy__index 스타일을 정의한 곳을 발견했다.&lt;/p&gt;

&lt;p&gt;display옵션을 지우고.. 드디어 원하던 스타일로 변경 성공 ㅠㅠㅠㅠ 감격의 순간이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/category_style.PNG&quot; alt=&quot;변경된 카테고리 메뉴&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;다음엔 이제 post style에서 제목과 본문을 좀 떨어트려놓는 시도를 해볼 예정이다.&lt;/p&gt;

&lt;p&gt;신난다!&lt;/p&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="jekyll" /><summary type="html">감격.. 드디어 원하던 스타일의 일부를 변경하는 데 성공했다! 카테고리와 태그 메뉴에서 메뉴들이 우측에 떴으면 좋겠다고 생각했는데, 1시간의 사투 끝에 바꿀 수 있었다. 개발자모드로 학습하기 개발자 모드로 뒤적거리다가 html을 변경해줘야 한다는 걸 알게됐다. html 초짜라서 태그도 못알아보지만 일단 배껴보기로 결심.. 오랜만에 jekyll server를 가동시켰다.</summary></entry><entry><title type="html">190329_DN</title><link href="http://localhost:4000/dn/190329_DN/" rel="alternate" type="text/html" title="190329_DN" /><published>2019-03-30T00:52:24+09:00</published><updated>2019-03-30T00:52:24+09:00</updated><id>http://localhost:4000/dn/190329_DN</id><content type="html" xml:base="http://localhost:4000/dn/190329_DN/">&lt;p&gt;&lt;em&gt;190329 Daily Note&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;mtt&quot;&gt;MTT&lt;/h3&gt;
&lt;h6 id=&quot;my-trivial-today&quot;&gt;&lt;em&gt;My Trivial Today&lt;/em&gt;&lt;/h6&gt;

&lt;p&gt;어제는 저녁 약속이 있어서 DN은 빼먹었다 ;)&lt;br /&gt;
대신 PPI는 새벽에 올려놔서 잔디 씨앗은 심었다..!&lt;br /&gt;
무사히 한 줄을 다시 채울 수 있어서 기쁨 크크&lt;/p&gt;

&lt;p&gt;어제는 백준님의 알고리즘 역량 테스트 강의를 들었다.&lt;br /&gt;
강의를 듣는데 핵심이 너무 훅 지나가버려서 거의 이해 못했다..&lt;br /&gt;
원래 강의 요약을 블로그에 올리려고 했는데 이해를 못해서 올릴 수가 ㅠ_ㅠ&lt;/p&gt;

&lt;p&gt;DFS/BFS, Brute Force가 주로 역테에 나온다고 하셨으니까&lt;br /&gt;
앞으로 그 위주로 공부하면서 강의에 정리해 놓은 내용을 이해해볼 셈이다.&lt;/p&gt;

&lt;p&gt;빨리 코딩테스트 문제를 잘 풀게 될 수 있었으면 좋겠다!!!!&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;tid&quot;&gt;TID&lt;/h3&gt;
&lt;h6 id=&quot;today-i-did&quot;&gt;&lt;em&gt;Today I Did&lt;/em&gt;&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;데이터베이스 개념 읽기&lt;/li&gt;
  &lt;li&gt;경험 정리하기&lt;/li&gt;
  &lt;li&gt;영어 회화 공부하기&lt;/li&gt;
  &lt;li&gt;Git 강의 듣기&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;매일 똑같은 일의 반복이군…하하&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;siw&quot;&gt;SIW&lt;/h3&gt;
&lt;h6 id=&quot;someday-i-will&quot;&gt;&lt;em&gt;Someday I Will&lt;/em&gt;&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;블로그 테마 바꾸기&lt;br /&gt;
포스트 제목 밑에 여백을 좀 더 넣고 싶다.&lt;br /&gt;
그리고 카테고리/태그 콜렉터는 우측에서 볼 수 있었으면 좋겠어… 빨리 바꾸고 싶다…&lt;/li&gt;
  &lt;li&gt;알고리즘 하루에 2개씩은 풀기&lt;/li&gt;
  &lt;li&gt;프로젝트 정리하기&lt;/li&gt;
&lt;/ol&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="daily" /><summary type="html">190329 Daily Note</summary></entry><entry><title type="html">190329_PPI</title><link href="http://localhost:4000/interview/190329_PPI/" rel="alternate" type="text/html" title="190329_PPI" /><published>2019-03-29T23:51:24+09:00</published><updated>2019-03-29T23:51:24+09:00</updated><id>http://localhost:4000/interview/190329_PPI</id><content type="html" xml:base="http://localhost:4000/interview/190329_PPI/">&lt;p&gt;오늘은 네트워크와 관련된 질문이다 :)&lt;/p&gt;

&lt;h4 id=&quot;osi-7-layer를-1계층부터-7계층까지-순서대로-말하시오&quot;&gt;OSI 7 Layer를 1계층부터 7계층까지 순서대로 말하시오&lt;/h4&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Application Layer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Presentation Layer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Session Layer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Transport Layer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Network Layer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DataLink Layer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Physical Layer&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;tcp와-udp의-차이점에-대해-말하시오&quot;&gt;TCP와 UDP의 차이점에 대해 말하시오&lt;/h4&gt;

&lt;h5 id=&quot;tcp&quot;&gt;TCP&lt;/h5&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;TCP(Transmission Control Protocol, 전송제어 프로토콜)&lt;/code&gt;는 &lt;strong&gt;연결형 프로토콜&lt;/strong&gt;이다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;3-way-handshake&lt;/code&gt;를 통해 수신 여부를 확인해 신뢰성이 높은 대신 속도가 느리다.&lt;br /&gt;
멀티 캐스팅이나 브로드캐스팅을 지원하지 않는다.&lt;/p&gt;

&lt;h5 id=&quot;udp&quot;&gt;UDP&lt;/h5&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UDP(User Datagram Protocol, 사용자 데이터그램 프로토콜)&lt;/code&gt;는 &lt;strong&gt;비연결형 프로토콜&lt;/strong&gt;이다.  수신 여부를 확인하지 않아 신뢰성이 낮은 대신 속도가 빠르다.&lt;/p&gt;

&lt;p&gt;TCP와 UDP의 차이를 표로 정리해보면 아래와 같다.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;UDP&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;연결 방식&lt;/td&gt;
      &lt;td&gt;연결형&lt;/td&gt;
      &lt;td&gt;비연결형&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;패킷 교환 방식&lt;/td&gt;
      &lt;td&gt;가상회선&lt;/td&gt;
      &lt;td&gt;데이터그램&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;전송 순서&lt;/td&gt;
      &lt;td&gt;전송순서보장&lt;/td&gt;
      &lt;td&gt;전송순서보장X&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;수신 여부 확인&lt;/td&gt;
      &lt;td&gt;확인함&lt;/td&gt;
      &lt;td&gt;확인하지 않음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;통신 방식&lt;/td&gt;
      &lt;td&gt;1:1&lt;/td&gt;
      &lt;td&gt;1:1/1:N/N:N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;신뢰성&lt;/td&gt;
      &lt;td&gt;높음&lt;/td&gt;
      &lt;td&gt;낮음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;속도&lt;/td&gt;
      &lt;td&gt;느림&lt;/td&gt;
      &lt;td&gt;빠름&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="daily" /><summary type="html">오늘은 네트워크와 관련된 질문이다 :) OSI 7 Layer를 1계층부터 7계층까지 순서대로 말하시오</summary></entry><entry><title type="html">git revert와 reset의 차이</title><link href="http://localhost:4000/vcs/git_revert&reset/" rel="alternate" type="text/html" title="git revert와 reset의 차이" /><published>2019-03-29T20:58:24+09:00</published><updated>2019-03-29T20:58:24+09:00</updated><id>http://localhost:4000/vcs/git_revert&amp;reset</id><content type="html" xml:base="http://localhost:4000/vcs/git_revert&amp;reset/">&lt;p&gt;오늘 본 git 강의 중에 git revert와 git reset이 있었다.&lt;/p&gt;

&lt;p&gt;옛날에 인턴 하면서 push를 잘못한 기억이 있어서 그 때 기억이 살아나는 아픈 강의..&lt;br /&gt;
맨날 GUI로 commit하다보니 revert하는 법을 몰라서&lt;br /&gt;
주임님께 여쭤보고 한참을 쩔쩔 맨 기억이 있다. ;(&lt;/p&gt;

&lt;p&gt;revert로 인해 더러워진 git log를 보면서 눈물을 감추지 못했다..&lt;br /&gt;
팀 git log에 길이길이 남을 나의 흔적 XD.. 암튼,&lt;br /&gt;
reset과 revert는 모두 &lt;strong&gt;이전 버전 id로 돌아간다는 특징&lt;/strong&gt;을 가지고 있다.&lt;/p&gt;

&lt;p&gt;직접 써보면 log에 남냐, 안남냐 차이가 보이긴 하지만&lt;br /&gt;
그 차이를 잘 설명해놓은 만화를 발견해서 블로그에 올려본다 :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.popit.kr/%EA%B0%9C%EB%B0%9C%EB%B0%94%EB%B3%B4%EB%93%A4-git-back-to-the-future/&quot;&gt;http://www.popit.kr/&lt;/a&gt;&lt;/p&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="git" /><summary type="html">오늘 본 git 강의 중에 git revert와 git reset이 있었다.</summary></entry><entry><title type="html">190328_PPI</title><link href="http://localhost:4000/interview/190328_PPI/" rel="alternate" type="text/html" title="190328_PPI" /><published>2019-03-28T00:51:24+09:00</published><updated>2019-03-28T00:51:24+09:00</updated><id>http://localhost:4000/interview/190328_PPI</id><content type="html" xml:base="http://localhost:4000/interview/190328_PPI/">&lt;p&gt;오늘은 보안과 관련된 질문이다 :)&lt;/p&gt;

&lt;h4 id=&quot;dns-공격에는-어떤-것이-있는지-설명하시오&quot;&gt;DNS 공격에는 어떤 것이 있는지 설명하시오&lt;/h4&gt;

&lt;p&gt;먼저 DNS(Domain Name Server)는 IP 주소를 도메인명으로 전환하는 역할을 한다.&lt;br /&gt;
DNS 공격의 종류로는 아래 3가지가 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DoS 공격&lt;br /&gt;
DNS를 무력화시켜 연동된 다른 웹사이트를 마비시키는 공격이다.&lt;/li&gt;
  &lt;li&gt;DNS 하이재킹&lt;br /&gt;
특정 도메인을 특정 DNS 서버로 우회시키는 공격이다.&lt;/li&gt;
  &lt;li&gt;DNS Spoofing&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;dns-spoofing은-무엇인지-설명하시오&quot;&gt;DNS Spoofing은 무엇인지 설명하시오&lt;/h4&gt;

&lt;p&gt;DNS Spoofing은 DNS에서 전달되는 IP 주소를 변조하거나 DNS 서버를 장악해&lt;br /&gt;
사용자가 의도하지 않은 주소로 접속하게 만드는 공격 방법이다.&lt;/p&gt;

&lt;p&gt;보통 사용자는 IP주소 대신 URL 주소를 사용한다.&lt;br /&gt;
컴퓨터는 URL을 바로 인식할 수 없기 때문에, URL을 입력 받으면 DNS 주소로 UDP 프로토콜을 이용해 질의한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h5 id=&quot;중간자-공격&quot;&gt;중간자 공격&lt;/h5&gt;

  &lt;p&gt;중간자 공격일 경우 컴퓨터가 보내는 질의 내용을 수정하여 DNS에 전송한다.&lt;br /&gt;
이렇게 되면 질의가 변경되었기 때문에 의도하지 않은 곳으로 접속될 수 있다.&lt;/p&gt;

  &lt;h5 id=&quot;dns주소-변조-공격&quot;&gt;DNS주소 변조 공격&lt;/h5&gt;

  &lt;p&gt;사용자 컴퓨터에 등록된 DNS의 IP주소가 이미 변경되어 있을 경우이다.&lt;br /&gt;
이 경우 사용자가 제대로 질의를 보냈더라도 공격자가 지정한 서버로 질의하기 때문에&lt;br /&gt;
의도하지 않은 곳으로 접속될 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="daily" /><summary type="html">오늘은 보안과 관련된 질문이다 :) DNS 공격에는 어떤 것이 있는지 설명하시오</summary></entry><entry><title type="html">190327_DN</title><link href="http://localhost:4000/dn/190327_DN/" rel="alternate" type="text/html" title="190327_DN" /><published>2019-03-27T23:23:24+09:00</published><updated>2019-03-27T23:23:24+09:00</updated><id>http://localhost:4000/dn/190327_DN</id><content type="html" xml:base="http://localhost:4000/dn/190327_DN/">&lt;p&gt;&lt;em&gt;190327 Daily Note&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;mtt&quot;&gt;MTT&lt;/h3&gt;
&lt;h6 id=&quot;my-trivial-today&quot;&gt;&lt;em&gt;My Trivial Today&lt;/em&gt;&lt;/h6&gt;

&lt;p&gt;오늘의 씨앗도 무사히 심기~~&lt;/p&gt;

&lt;p&gt;경험정리 할 때는 하나도 안졸리더니 공부하려니까 졸려서 결국 한시간 졸았다.&lt;br /&gt;
안졸리는 날이 없어..&lt;/p&gt;

&lt;p&gt;오늘 카페에 가려고 했는데 뭔가 또 핑계거리가 있어서 안갔다.&lt;br /&gt;
내일도 알고리즘 강의 듣느라 안 갈 예정 XD!&lt;br /&gt;
대신 친구랑 카페에서 잠깐 알고리즘 풀기로 했다..&lt;/p&gt;

&lt;p&gt;내일 저녁 약속도 있어서 따로 공부는 못하겠어요 ;(&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;tid&quot;&gt;TID&lt;/h3&gt;
&lt;h6 id=&quot;today-i-did&quot;&gt;&lt;em&gt;Today I Did&lt;/em&gt;&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;데이터베이스 개념 읽기&lt;br /&gt;
오늘은 그래도 좀 더 읽었다. 뭐라도 한 나 자신.. 잘했어..&lt;/li&gt;
  &lt;li&gt;경험 정리하기&lt;/li&gt;
  &lt;li&gt;영어 회화 공부하기&lt;/li&gt;
  &lt;li&gt;Git 강의 듣기&lt;br /&gt;
그냥 맨날 add, commit, push만 하다가 어떻게 동작하는 지 알아야 할 것 같아서.. 오늘부터 시작이다!&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;siw&quot;&gt;SIW&lt;/h3&gt;
&lt;h6 id=&quot;someday-i-will&quot;&gt;&lt;em&gt;Someday I Will&lt;/em&gt;&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;블로그 테마 바꾸기&lt;/li&gt;
  &lt;li&gt;알고리즘 하루에 2개씩은 풀기&lt;/li&gt;
  &lt;li&gt;프로젝트 정리하기&lt;/li&gt;
&lt;/ol&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="daily" /><summary type="html">190327 Daily Note</summary></entry><entry><title type="html">IT 기술 면접 질문 대비</title><link href="http://localhost:4000/interview/PPI_Collector/" rel="alternate" type="text/html" title="IT 기술 면접 질문 대비" /><published>2019-03-27T00:51:24+09:00</published><updated>2019-03-27T00:51:24+09:00</updated><id>http://localhost:4000/interview/PPI_Collector</id><content type="html" xml:base="http://localhost:4000/interview/PPI_Collector/">&lt;p&gt;하루에 한 두개씩 면접 대비로 질문에 대해 생각하는 걸 해보려고 한다.&lt;br /&gt;
질문 중엔 그 동안 받았던 질문도, 개인적으로 생각해본 질문도 있을 듯!&lt;/p&gt;

&lt;p&gt;앞으로 여기에 질문들의 링크를 추가해볼 예정이다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://2ssue.github.io/interview/190327_PPI/&quot;&gt;JVM의 역할/자바의 특징&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://2ssue.github.io/interview/190328_PPI/&quot;&gt;DNS 공격/DNS Spoofing&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://2ssue.github.io/interview/190329_PPI/&quot;&gt;OSI 7 Layer/TCP와 UDP의 차이&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://2ssue.github.io/interview/190401_PPI/&quot;&gt;GET과 POST의 차이/NAT란?&lt;/a&gt;&lt;/p&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="collect" /><summary type="html">하루에 한 두개씩 면접 대비로 질문에 대해 생각하는 걸 해보려고 한다. 질문 중엔 그 동안 받았던 질문도, 개인적으로 생각해본 질문도 있을 듯! 앞으로 여기에 질문들의 링크를 추가해볼 예정이다.</summary></entry><entry><title type="html">190327_PPI</title><link href="http://localhost:4000/interview/190327_PPI/" rel="alternate" type="text/html" title="190327_PPI" /><published>2019-03-27T00:51:24+09:00</published><updated>2019-03-27T00:51:24+09:00</updated><id>http://localhost:4000/interview/190327_PPI</id><content type="html" xml:base="http://localhost:4000/interview/190327_PPI/">&lt;p&gt;오늘의 질문은 자바와 관련된 질문이다 :)&lt;/p&gt;

&lt;h4 id=&quot;자바의-jvm의-역할에-대해-설명하시오&quot;&gt;자바의 JVM의 역할에 대해 설명하시오&lt;/h4&gt;

&lt;p&gt;자바 프로그램은 기계어가 아닌 바이트 코드로 이뤄져있다.&lt;br /&gt;
따라서 이를 해석하고 실행할 수 있는 가상 운영체제가 필요한데, 이것이 JVM(Java Virtual Machine)이다.&lt;/p&gt;

&lt;p&gt;즉 JVM은 자바 프로그램을 기계어로 번역해 각 운영체제에서 실행될 수 있도록 하는 역할을 한다.&lt;/p&gt;

&lt;h4 id=&quot;자바의-특징에-대해-설명하시오&quot;&gt;자바의 특징에 대해 설명하시오&lt;/h4&gt;

&lt;p&gt;객체 지향 프로그래밍(Object Oriented Programming, OOP)언어이다.&lt;br /&gt;
JRE를 통해 모든 운영 체제에서 실행이 가능하다.&lt;br /&gt;
Garbage Collector를 통해 메모리를 자동으로 관리한다.&lt;br /&gt;
컴파일 한번으로 기계어가 만들어지지 않기 때문에 C, C++ 언어에 비해 느리다.&lt;/p&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="daily" /><summary type="html">오늘의 질문은 자바와 관련된 질문이다 :) 자바의 JVM의 역할에 대해 설명하시오</summary></entry></feed>