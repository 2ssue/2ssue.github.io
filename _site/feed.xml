<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-03-30T02:02:54+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">잔디밭 만들기 프로젝트</title><subtitle>This is a practice version blog!</subtitle><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><entry><title type="html">190329_DN</title><link href="http://localhost:4000/dn/190329_DN/" rel="alternate" type="text/html" title="190329_DN" /><published>2019-03-30T00:52:24+09:00</published><updated>2019-03-30T00:52:24+09:00</updated><id>http://localhost:4000/dn/190329_DN</id><content type="html" xml:base="http://localhost:4000/dn/190329_DN/">&lt;p&gt;&lt;em&gt;190329 Daily Note&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;mtt&quot;&gt;MTT&lt;/h3&gt;
&lt;h6 id=&quot;my-trivial-today&quot;&gt;&lt;em&gt;My Trivial Today&lt;/em&gt;&lt;/h6&gt;

&lt;p&gt;어제는 저녁 약속이 있어서 DN은 빼먹었다 ;)&lt;br /&gt;
대신 PPI는 새벽에 올려놔서 잔디 씨앗은 심었다..!&lt;br /&gt;
무사히 한 줄을 다시 채울 수 있어서 기쁨 크크&lt;/p&gt;

&lt;p&gt;어제는 백준님의 알고리즘 역량 테스트 강의를 들었다.&lt;br /&gt;
강의를 듣는데 핵심이 너무 훅 지나가버려서 거의 이해 못했다..&lt;br /&gt;
원래 강의 요약을 블로그에 올리려고 했는데 이해를 못해서 올릴 수가 ㅠ_ㅠ&lt;/p&gt;

&lt;p&gt;DFS/BFS, Brute Force가 주로 역테에 나온다고 하셨으니까&lt;br /&gt;
앞으로 그 위주로 공부하면서 강의에 정리해 놓은 내용을 이해해볼 셈이다.&lt;/p&gt;

&lt;p&gt;빨리 코딩테스트 문제를 잘 풀게 될 수 있었으면 좋겠다!!!!&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;tid&quot;&gt;TID&lt;/h3&gt;
&lt;h6 id=&quot;today-i-did&quot;&gt;&lt;em&gt;Today I Did&lt;/em&gt;&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;데이터베이스 개념 읽기&lt;/li&gt;
  &lt;li&gt;경험 정리하기&lt;/li&gt;
  &lt;li&gt;영어 회화 공부하기&lt;/li&gt;
  &lt;li&gt;Git 강의 듣기&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;매일 똑같은 일의 반복이군…하하&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;siw&quot;&gt;SIW&lt;/h3&gt;
&lt;h6 id=&quot;someday-i-will&quot;&gt;&lt;em&gt;Someday I Will&lt;/em&gt;&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;블로그 테마 바꾸기&lt;br /&gt;
포스트 제목 밑에 여백을 좀 더 넣고 싶다.&lt;br /&gt;
그리고 카테고리/태그 콜렉터는 우측에서 볼 수 있었으면 좋겠어… 빨리 바꾸고 싶다…&lt;/li&gt;
  &lt;li&gt;알고리즘 하루에 2개씩은 풀기&lt;/li&gt;
  &lt;li&gt;프로젝트 정리하기&lt;/li&gt;
&lt;/ol&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="daily" /><summary type="html">190329 Daily Note</summary></entry><entry><title type="html">190329_PPI</title><link href="http://localhost:4000/interview/190329_PPI/" rel="alternate" type="text/html" title="190329_PPI" /><published>2019-03-29T23:51:24+09:00</published><updated>2019-03-29T23:51:24+09:00</updated><id>http://localhost:4000/interview/190329_PPI</id><content type="html" xml:base="http://localhost:4000/interview/190329_PPI/">&lt;p&gt;오늘은 네트워크와 관련된 질문이다 :)&lt;/p&gt;

&lt;h4 id=&quot;osi-7-layer를-1계층부터-7계층까지-순서대로-말하시오&quot;&gt;OSI 7 Layer를 1계층부터 7계층까지 순서대로 말하시오&lt;/h4&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Application Layer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Presentation Layer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Session Layer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Transport Layer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Network Layer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DataLink Layer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Physical Layer&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;tcp와-udp의-차이점에-대해-말하시오&quot;&gt;TCP와 UDP의 차이점에 대해 말하시오&lt;/h4&gt;

&lt;p&gt;TCP는 연결형 서비스이고, 수신 여부를 확인해 신뢰성이 높은 대신 속도가 느리다.&lt;br /&gt;
UDP는 비연결형 서비스이고, 수신 여부를 확인하지 않아 신뢰성이 낮은 대신 속도가 빠르다.&lt;/p&gt;

&lt;p&gt;TCP와 UDP의 차이를 표로 정리해보면 아래와 같다.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;UDP&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;연결 방식&lt;/td&gt;
      &lt;td&gt;연결형&lt;/td&gt;
      &lt;td&gt;비연결형&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;패킷 교환 방식&lt;/td&gt;
      &lt;td&gt;가상회선&lt;/td&gt;
      &lt;td&gt;데이터그램&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;전송 순서&lt;/td&gt;
      &lt;td&gt;전송순서보장&lt;/td&gt;
      &lt;td&gt;전송순서보장X&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;수신 여부 확인&lt;/td&gt;
      &lt;td&gt;확인함&lt;/td&gt;
      &lt;td&gt;확인하지 않음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;통신 방식&lt;/td&gt;
      &lt;td&gt;1:1&lt;/td&gt;
      &lt;td&gt;1:1/1:N/N:N&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;신뢰성&lt;/td&gt;
      &lt;td&gt;높음&lt;/td&gt;
      &lt;td&gt;낮음&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;속도&lt;/td&gt;
      &lt;td&gt;느림&lt;/td&gt;
      &lt;td&gt;빠름&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="daily" /><summary type="html">오늘은 네트워크와 관련된 질문이다 :) OSI 7 Layer를 1계층부터 7계층까지 순서대로 말하시오</summary></entry><entry><title type="html">git revert와 reset의 차이</title><link href="http://localhost:4000/vcs/git_revert&reset/" rel="alternate" type="text/html" title="git revert와 reset의 차이" /><published>2019-03-29T20:58:24+09:00</published><updated>2019-03-29T20:58:24+09:00</updated><id>http://localhost:4000/vcs/git_revert&amp;reset</id><content type="html" xml:base="http://localhost:4000/vcs/git_revert&amp;reset/">&lt;p&gt;오늘 본 git 강의 중에 git revert와 git reset이 있었다.&lt;/p&gt;

&lt;p&gt;옛날에 인턴 하면서 push를 잘못한 기억이 있어서 그 때 기억이 살아나는 아픈 강의..&lt;br /&gt;
맨날 GUI로 commit하다보니 revert하는 법을 몰라서&lt;br /&gt;
주임님께 여쭤보고 한참을 쩔쩔 맨 기억이 있다. ;(&lt;/p&gt;

&lt;p&gt;revert로 인해 더러워진 git log를 보면서 눈물을 감추지 못했다..&lt;br /&gt;
팀 git log에 길이길이 남을 나의 흔적 XD.. 암튼,&lt;br /&gt;
reset과 revert는 모두 &lt;strong&gt;이전 버전 id로 돌아간다는 특징&lt;/strong&gt;을 가지고 있다.&lt;/p&gt;

&lt;p&gt;직접 써보면 log에 남냐, 안남냐 차이가 보이긴 하지만&lt;br /&gt;
그 차이를 잘 설명해놓은 만화를 발견해서 블로그에 올려본다 :)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.popit.kr/%EA%B0%9C%EB%B0%9C%EB%B0%94%EB%B3%B4%EB%93%A4-git-back-to-the-future/&quot;&gt;http://www.popit.kr/&lt;/a&gt;&lt;/p&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="git" /><summary type="html">오늘 본 git 강의 중에 git revert와 git reset이 있었다.</summary></entry><entry><title type="html">190328_PPI</title><link href="http://localhost:4000/interview/190328_PPI/" rel="alternate" type="text/html" title="190328_PPI" /><published>2019-03-28T00:51:24+09:00</published><updated>2019-03-28T00:51:24+09:00</updated><id>http://localhost:4000/interview/190328_PPI</id><content type="html" xml:base="http://localhost:4000/interview/190328_PPI/">&lt;p&gt;오늘은 보안과 관련된 질문이다 :)&lt;/p&gt;

&lt;h4 id=&quot;dns-공격에는-어떤-것이-있는지-설명하시오&quot;&gt;DNS 공격에는 어떤 것이 있는지 설명하시오&lt;/h4&gt;

&lt;p&gt;먼저 DNS(Domain Name Server)는 IP 주소를 도메인명으로 전환하는 역할을 한다.&lt;br /&gt;
DNS 공격의 종류로는 아래 3가지가 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DoS 공격&lt;br /&gt;
DNS를 무력화시켜 연동된 다른 웹사이트를 마비시키는 공격이다.&lt;/li&gt;
  &lt;li&gt;DNS 하이재킹&lt;br /&gt;
특정 도메인을 특정 DNS 서버로 우회시키는 공격이다.&lt;/li&gt;
  &lt;li&gt;DNS Spoofing&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;dns-spoofing은-무엇인지-설명하시오&quot;&gt;DNS Spoofing은 무엇인지 설명하시오&lt;/h4&gt;

&lt;p&gt;DNS Spoofing은 DNS에서 전달되는 IP 주소를 변조하거나 DNS 서버를 장악해&lt;br /&gt;
사용자가 의도하지 않은 주소로 접속하게 만드는 공격 방법이다.&lt;/p&gt;

&lt;p&gt;보통 사용자는 IP주소 대신 URL 주소를 사용한다.&lt;br /&gt;
컴퓨터는 URL을 바로 인식할 수 없기 때문에, URL을 입력 받으면 DNS 주소로 UDP 프로토콜을 이용해 질의한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h5 id=&quot;중간자-공격&quot;&gt;중간자 공격&lt;/h5&gt;

  &lt;p&gt;중간자 공격일 경우 컴퓨터가 보내는 질의 내용을 수정하여 DNS에 전송한다.&lt;br /&gt;
이렇게 되면 질의가 변경되었기 때문에 의도하지 않은 곳으로 접속될 수 있다.&lt;/p&gt;

  &lt;h5 id=&quot;dns주소-변조-공격&quot;&gt;DNS주소 변조 공격&lt;/h5&gt;

  &lt;p&gt;사용자 컴퓨터에 등록된 DNS의 IP주소가 이미 변경되어 있을 경우이다.&lt;br /&gt;
이 경우 사용자가 제대로 질의를 보냈더라도 공격자가 지정한 서버로 질의하기 때문에&lt;br /&gt;
의도하지 않은 곳으로 접속될 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="daily" /><summary type="html">오늘은 보안과 관련된 질문이다 :) DNS 공격에는 어떤 것이 있는지 설명하시오</summary></entry><entry><title type="html">190327_DN</title><link href="http://localhost:4000/dn/190327_DN/" rel="alternate" type="text/html" title="190327_DN" /><published>2019-03-27T23:23:24+09:00</published><updated>2019-03-27T23:23:24+09:00</updated><id>http://localhost:4000/dn/190327_DN</id><content type="html" xml:base="http://localhost:4000/dn/190327_DN/">&lt;p&gt;&lt;em&gt;190327 Daily Note&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;mtt&quot;&gt;MTT&lt;/h3&gt;
&lt;h6 id=&quot;my-trivial-today&quot;&gt;&lt;em&gt;My Trivial Today&lt;/em&gt;&lt;/h6&gt;

&lt;p&gt;오늘의 씨앗도 무사히 심기~~&lt;/p&gt;

&lt;p&gt;경험정리 할 때는 하나도 안졸리더니 공부하려니까 졸려서 결국 한시간 졸았다.&lt;br /&gt;
안졸리는 날이 없어..&lt;/p&gt;

&lt;p&gt;오늘 카페에 가려고 했는데 뭔가 또 핑계거리가 있어서 안갔다.&lt;br /&gt;
내일도 알고리즘 강의 듣느라 안 갈 예정 XD!&lt;br /&gt;
대신 친구랑 카페에서 잠깐 알고리즘 풀기로 했다..&lt;/p&gt;

&lt;p&gt;내일 저녁 약속도 있어서 따로 공부는 못하겠어요 ;(&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;tid&quot;&gt;TID&lt;/h3&gt;
&lt;h6 id=&quot;today-i-did&quot;&gt;&lt;em&gt;Today I Did&lt;/em&gt;&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;데이터베이스 개념 읽기&lt;br /&gt;
오늘은 그래도 좀 더 읽었다. 뭐라도 한 나 자신.. 잘했어..&lt;/li&gt;
  &lt;li&gt;경험 정리하기&lt;/li&gt;
  &lt;li&gt;영어 회화 공부하기&lt;/li&gt;
  &lt;li&gt;Git 강의 듣기&lt;br /&gt;
그냥 맨날 add, commit, push만 하다가 어떻게 동작하는 지 알아야 할 것 같아서.. 오늘부터 시작이다!&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;siw&quot;&gt;SIW&lt;/h3&gt;
&lt;h6 id=&quot;someday-i-will&quot;&gt;&lt;em&gt;Someday I Will&lt;/em&gt;&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;블로그 테마 바꾸기&lt;/li&gt;
  &lt;li&gt;알고리즘 하루에 2개씩은 풀기&lt;/li&gt;
  &lt;li&gt;프로젝트 정리하기&lt;/li&gt;
&lt;/ol&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="daily" /><summary type="html">190327 Daily Note</summary></entry><entry><title type="html">190327_PPI</title><link href="http://localhost:4000/interview/190327_PPI/" rel="alternate" type="text/html" title="190327_PPI" /><published>2019-03-27T00:51:24+09:00</published><updated>2019-03-27T00:51:24+09:00</updated><id>http://localhost:4000/interview/190327_PPI</id><content type="html" xml:base="http://localhost:4000/interview/190327_PPI/">&lt;p&gt;오늘의 질문은 자바와 관련된 질문이다 :)&lt;/p&gt;

&lt;h4 id=&quot;자바의-jvm의-역할에-대해-설명하시오&quot;&gt;자바의 JVM의 역할에 대해 설명하시오&lt;/h4&gt;

&lt;p&gt;자바 프로그램은 기계어가 아닌 바이트 코드로 이뤄져있다.&lt;br /&gt;
따라서 이를 해석하고 실행할 수 있는 가상 운영체제가 필요한데, 이것이 JVM(Java Virtual Machine)이다.&lt;/p&gt;

&lt;p&gt;즉 JVM은 자바 프로그램을 기계어로 번역해 각 운영체제에서 실행될 수 있도록 하는 역할을 한다.&lt;/p&gt;

&lt;h4 id=&quot;자바의-특징에-대해-설명하시오&quot;&gt;자바의 특징에 대해 설명하시오&lt;/h4&gt;

&lt;p&gt;객체 지향 프로그래밍(Object Oriented Programming, OOP)언어이다.&lt;br /&gt;
JRE를 통해 모든 운영 체제에서 실행이 가능하다.&lt;br /&gt;
Garbage Collector를 통해 메모리를 자동으로 관리한다.&lt;br /&gt;
컴파일 한번으로 기계어가 만들어지지 않기 때문에 C, C++ 언어에 비해 느리다.&lt;/p&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="daily" /><summary type="html">오늘의 질문은 자바와 관련된 질문이다 :) 자바의 JVM의 역할에 대해 설명하시오</summary></entry><entry><title type="html">IT 기술 면접 질문 대비</title><link href="http://localhost:4000/interview/PPI_Collector/" rel="alternate" type="text/html" title="IT 기술 면접 질문 대비" /><published>2019-03-27T00:51:24+09:00</published><updated>2019-03-27T00:51:24+09:00</updated><id>http://localhost:4000/interview/PPI_Collector</id><content type="html" xml:base="http://localhost:4000/interview/PPI_Collector/">&lt;p&gt;하루에 한 두개씩 면접 대비로 질문에 대해 생각하는 걸 해보려고 한다.&lt;br /&gt;
질문 중엔 그 동안 받았던 질문도, 개인적으로 생각해본 질문도 있을 듯!&lt;/p&gt;

&lt;p&gt;앞으로 여기에 질문들의 링크를 추가해볼 예정이다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://2ssue.github.io/interview/190327_PPI/&quot;&gt;JVM의 역할/자바의 특징&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://2ssue.github.io/interview/190328_PPI/&quot;&gt;DNS 공격/DNS Spoofing&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://2ssue.github.io/interview/190329_PPI/&quot;&gt;OSI 7 Layer/TCP와 UDP의 차이&lt;/a&gt;&lt;/p&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="collect" /><summary type="html">하루에 한 두개씩 면접 대비로 질문에 대해 생각하는 걸 해보려고 한다. 질문 중엔 그 동안 받았던 질문도, 개인적으로 생각해본 질문도 있을 듯! 앞으로 여기에 질문들의 링크를 추가해볼 예정이다.</summary></entry><entry><title type="html">190326_DN</title><link href="http://localhost:4000/dn/190326_DN/" rel="alternate" type="text/html" title="190326_DN" /><published>2019-03-26T22:23:24+09:00</published><updated>2019-03-26T22:23:24+09:00</updated><id>http://localhost:4000/dn/190326_DN</id><content type="html" xml:base="http://localhost:4000/dn/190326_DN/">&lt;p&gt;&lt;em&gt;190326 Daily Note&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;mtt&quot;&gt;MTT&lt;/h3&gt;
&lt;h6 id=&quot;my-trivial-today&quot;&gt;&lt;em&gt;My Trivial Today&lt;/em&gt;&lt;/h6&gt;

&lt;p&gt;요즘 계속 무기력한 것 같아서 사소한 잔디 씨앗 겸, 일기 겸 가끔씩 내 생각을 적으려고 한다.&lt;/p&gt;

&lt;p&gt;정말로 매우 사소한 하루!&lt;br /&gt;
사소한 하루가 모여서 좀 더 나은 하루를 만들 수 있길 기대하면서 적어야지 :)&lt;/p&gt;

&lt;p&gt;오늘 하루도 별 일 안하고 넘어갔다. 한거라곤 정보처리기사 데이터베이스 조금 읽은 것..?  &lt;br /&gt;
취업 준비한다고 욕심만 과하다. 덕분에 스트레스만 뿜뿜 XP&lt;/p&gt;

&lt;p&gt;내일부턴 카페형 독서실 같은 데라도 가볼 참이다. 집에선 침대가 보이니 공부가 안돼…&lt;br /&gt;
백준님 제대로 보려면 목요일까지 알고리즘도 생각해봐야하고.&lt;/p&gt;

&lt;p&gt;하고 싶은 건 많은 데 핑계만 늘어가고 혼자하면 의지박약이라 큰일이다 :(&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;tid&quot;&gt;TID&lt;/h3&gt;
&lt;h6 id=&quot;today-i-did&quot;&gt;&lt;em&gt;Today I Did&lt;/em&gt;&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;데이터베이스 개념 읽기&lt;br /&gt;
아무래도 책읽는 일이 안맞나… 컴퓨터 화면에 너무 익숙해져있다.&lt;/li&gt;
  &lt;li&gt;경험 정리하기&lt;/li&gt;
  &lt;li&gt;영어 회화 공부하기&lt;br /&gt;
Cake앱 아직 일주일 정도밖에 안써봤지만 하루 습관 만들기는 좋은 것 같다.&lt;br /&gt;
혼자 있을 때 하면 시간가는 줄 모르고 보면서 하고 있다ㅋㅋㅋㅋㅋ&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;siw&quot;&gt;SIW&lt;/h3&gt;
&lt;h6 id=&quot;someday-i-will&quot;&gt;&lt;em&gt;Someday I Will&lt;/em&gt;&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;블로그 테마 바꾸기&lt;br /&gt;
아주 먼 미래형이다. 맘에 안드는 부분 투성인데 아직 스타일 구성하는 법을 잘 모르겠다.&lt;/li&gt;
  &lt;li&gt;알고리즘 하루에 2개씩은 풀기&lt;br /&gt;
레포지토리 생성해서 기록해두는 게 좋을 것 같다. 블로그도 좋긴 하지만.. 깃이 뭔가 더 멋있어..&lt;/li&gt;
  &lt;li&gt;프로젝트 정리하기&lt;/li&gt;
  &lt;li&gt;정보처리기사 다시 공부하기&lt;/li&gt;
&lt;/ol&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="daily" /><summary type="html">190326 Daily Note</summary></entry><entry><title type="html">[이것이 자바다] 06 클래스 확인문제</title><link href="http://localhost:4000/programming/language/this_is_java_06/" rel="alternate" type="text/html" title="[이것이 자바다] 06 클래스 확인문제" /><published>2019-03-25T17:05:24+09:00</published><updated>2019-03-25T17:05:24+09:00</updated><id>http://localhost:4000/programming/language/this_is_java_06</id><content type="html" xml:base="http://localhost:4000/programming/language/this_is_java_06/">&lt;h3 id=&quot;클래스의-구성-멤버&quot;&gt;클래스의 구성 멤버&lt;/h3&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ClassName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//Field&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fieldName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;//Constructor&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ClassName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){...}&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;//Method&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;methodName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){...}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;필드field&quot;&gt;필드(Field)&lt;/h4&gt;

&lt;p&gt;객체의 고유 데이터, 부품 객체, 상태 정보를 저장하는 곳&lt;br /&gt;
변수와 비슷하지만 객체가 소멸되지 않는 한 계속 사용이 가능하다.&lt;/p&gt;

&lt;h4 id=&quot;생성자constructor&quot;&gt;생성자(Constructor)&lt;/h4&gt;

&lt;p&gt;객체 생성 시 초기화를 담당&lt;br /&gt;
필드를 초기화하거나, 메소드를 호출해 객체를 사용할 준비를 한다.&lt;br /&gt;
메소드와 비슷하지만 리턴타입이 없다는 특징이 있다.&lt;br /&gt;
클래스 이름과 생성자의 이름은 같아야 한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h5 id=&quot;기본-생성자&quot;&gt;기본 생성자&lt;/h5&gt;
  &lt;p&gt;생성자를 선언하지 않았을 때는 컴파일러가 기본 생성자를 바이트 코드에 추가한다.&lt;/p&gt;

  &lt;h5 id=&quot;생성자-선언&quot;&gt;생성자 선언&lt;/h5&gt;
  &lt;p&gt;일반적으로 필드에 초기 값을 저장하거나 객체를 사용하기 전 준비하는데 사용한다.&lt;br /&gt;
생성자는 오버로딩하여 사용할 수 있다.&lt;br /&gt;
오버로딩을 할 때는 매개 변수의 타입, 개수, 순서 중 하나가 달라야 한다.&lt;/p&gt;
  &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//Declare&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//Field&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxSpeed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;//Constructor&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxSpeed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;maxSpeed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxSpeed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Use&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Car&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myCar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;그랜저&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;검정&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;메소드method&quot;&gt;메소드(Method)&lt;/h4&gt;

&lt;p&gt;매개값을 받아 다른 값을 리턴하는 동작 등 다양한 역할을 한다.&lt;/p&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;singleton&quot;&gt;Singleton&lt;/h3&gt;

&lt;p&gt;단 하나만 생성되는 객체. 클래스 외부에서 생성자를 호출할 수 없도록 해야한다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SingletonExample&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//static Field&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SingletonExample&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;singleton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SingletonExample&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//Constructor&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SingletonExample&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//static Method&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SingletonExample&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;singleton&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Can't Use (Compile Error)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SingletonExample&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SingletonExample&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;  
&lt;span class=&quot;c1&quot;&gt;//Use&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SingletonExample&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;object1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SingletonExample&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;hr /&gt;

&lt;h3 id=&quot;annotation&quot;&gt;Annotation&lt;/h3&gt;
&lt;p&gt;어노테이션은 메타데이터(metadata)라고 볼 수 있다.&lt;br /&gt;
메타데이터란 앱이 처리해야할 데이터가 아니라, 컴파일 과정과 실행 과정에서 코드를 어떻게 컴파일하고 처리할 것인지 알려주는 정보이다.&lt;br /&gt;
아래와 같이 작성한다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@AnnotationName&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;컴파일러에게 코드 문법 에러를 체크하도록 정보 제공&lt;/li&gt;
  &lt;li&gt;소프트웨어 개발 툴이 빌드나 배치 시 코드를 자동으로 생성할 수 있도록 정보 제공&lt;/li&gt;
  &lt;li&gt;실행 시(런타임 시)특정 기능을 실행하도록 정보 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;대표적인 예로는 @Override가 있다.&lt;br /&gt;
메소드가 오버라이드된 것을 컴파일러에게 알려주고 컴파일러가 오버라이드 검사를 하도록 한다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h3 id=&quot;확인문제&quot;&gt;확인문제&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;객체와-클래스에-대한-설명으로-틀린-것은&quot;&gt;객체와 클래스에 대한 설명으로 틀린 것은?&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;클래스는 객체를 생성하기 위한 설계도(청사진)와 같은 것이다.&lt;/li&gt;
  &lt;li&gt;new 연산자로 클래스의 생성자를 호출함으로써 객체가 생성된다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;하나의 클래스로 하나의 객체만 생성할 수 있다.&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;객체는 클래스의 인스턴스이다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;하나의 클래스로 여러개의 객체를 생성 가능하다.&lt;/p&gt;

&lt;h4 id=&quot;클래스의-구성-멤버가-아닌-것은&quot;&gt;클래스의 구성 멤버가 아닌 것은?&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;필드(Field)&lt;/li&gt;
  &lt;li&gt;생성자(Constructor)&lt;/li&gt;
  &lt;li&gt;메소드(Method)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;로컬 변수(local variable)&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;로컬 변수는 메소드의 구성 멤버라고 볼 수 있을 것 같다.&lt;/p&gt;

&lt;h4 id=&quot;필드-생성자-메소드에-대한-설명으로-틀린-것은&quot;&gt;필드, 생성자, 메소드에 대한 설명으로 틀린 것은?&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;필드는 객체의 데이터를 저장한다.&lt;/li&gt;
  &lt;li&gt;생성자는 객체의 초기화를 담당한다.&lt;/li&gt;
  &lt;li&gt;메소드는 객체의 동작 부분으로, 실행 코드를 가지고 있는 블록이다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;클래스는 반드시 필드와 메소드를 가져야 한다.&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;클래스는 반드시 필드와 메소드를 가질 필요는 없다.&lt;/p&gt;

&lt;h4 id=&quot;필드에-대한-설명으로-틀린-것은&quot;&gt;필드에 대한 설명으로 틀린 것은?&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;필드는 메소드에서 사용할 수 있다.&lt;/li&gt;
  &lt;li&gt;인스턴스 필드 초기화는 생성자에서 할 수 있다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;필드는 반드시 생성자 선언 전에 선언되어야 한다.&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;필드는 초기값을 주지 않더라도 기본값으로 자동 초기화된다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;필드는 클래스 내부 어디에서나 선언 가능하지만, 메소드와 생성자 안에서는 불가능하다.&lt;/p&gt;

&lt;h4 id=&quot;생성자에-대한-설명으로-틀린-것은&quot;&gt;생성자에 대한 설명으로 틀린 것은?&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;객체를 생성하려면 생성자 호출이 반드시 필요한 것은 아니다.&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;생성자는 다른 생성자를 호출하기 위해 this()를 사용할 수 있다.&lt;/li&gt;
  &lt;li&gt;생성자가 선언되지 않으면 컴파일러가 기본 생성자를 추가한다.&lt;/li&gt;
  &lt;li&gt;외부에서 객체를 생성할 수 없도록 생성자에 private 접근 제한자를 붙일 수 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;객체를 생성하려면 반드시 생성자를 호출해야 한다.&lt;/p&gt;

&lt;h4 id=&quot;메소드에-대한-설명으로-틀린-것은&quot;&gt;메소드에 대한 설명으로 틀린 것은?&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;리턴값이 없는 메소드는 리턴 타입을 void로 해야 한다.&lt;/li&gt;
  &lt;li&gt;리턴 타입이 있는 메소드는 리턴값을 지정하기 위해 반드시 return문이 있어야 한다.&lt;/li&gt;
  &lt;li&gt;매개값의 수를 모를 경우 “…“를 이용해서 매개 변수를 선언할 수 있다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;메소드의 이름은 중복해서 선언할 수 없다.&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;메소드의 이름은 중복해서 선언 가능하다. 이를 오버로딩이라고 한다.&lt;br /&gt;
대신 메소드의 매개변수의 개수, 타입, 순서 중 하나가 달라야 오버로딩이 가능하다.&lt;/p&gt;

&lt;h4 id=&quot;메소드-오버로딩에-대한-설명으로-틀린-것은&quot;&gt;메소드 오버로딩에 대한 설명으로 틀린 것은?&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;동일한 이름의 메소드를 여러 개 선언하는 것을 말한다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;반드시 리턴 타입이 달라야 한다.&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;매개 변수의 타입, 수, 순서를 다르게 선언해야 한다.&lt;/li&gt;
  &lt;li&gt;매개값의 타입 및 수에 따라 호출될 메소드가 선택된다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;반드시 리턴 타입이 다를 필요는 없다.&lt;/p&gt;

&lt;h4 id=&quot;인스턴스-멤버와-정적-멤버에-대한-설명으로-틀린-것은&quot;&gt;인스턴스 멤버와 정적 멤버에 대한 설명으로 틀린 것은?&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;정적 멤버는 static으로 선언된 필드와 메소드를 말한다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;인스턴스 필드는 생성자 및 정적 블록에서 초기화될 수 있다.&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;정적 필드와 정적 메소드는 객체 생성 없이 클래스를 통해 접근할 수 있다.&lt;/li&gt;
  &lt;li&gt;인스턴스 필드와 메소드는 객체를 생성하고 사용해야 한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;인스턴스 필드는 생성자에서는 초기화될 수 있지만 정적 블록에서 초기화 될 수는 없다.&lt;br /&gt;
인스턴스 필드를 정적 블록에서 초기화하고 싶다면 객체를 생성하고 참조변수로 접근해야 한다.&lt;/p&gt;

&lt;h4 id=&quot;final-필드와-상수static-final에-대한-설명으로-틀린-것은&quot;&gt;final 필드와 상수(static final)에 대한 설명으로 틀린 것은?&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;final 필드와 상수는 초기값이 저장되면 값을 변경할 수 없다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;final 필드와 상수는 생성자에서 초기화될 수 있다.&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;상수의 이름은 대문자로 작성하는 것이 관례이다.&lt;/li&gt;
  &lt;li&gt;상수는 객체 생성 없이 클래스를 통해 사용할 수 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;final 필드는 생성자에서 초기화할 수 있지만 상수는 초기화할 수 없다.&lt;br /&gt;
상수를 초기화하려면 정적 블록을 활용해야 한다.&lt;/p&gt;

&lt;h4 id=&quot;패키지에-대한-설명으로-틀린-것은&quot;&gt;패키지에 대한 설명으로 틀린 것은?&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;패키지는 클래스들을 그룹화시키는 기능을 한다.&lt;/li&gt;
  &lt;li&gt;클래스가 패키지에 소속되려면 패키지 선언을 반드시 해야 한다.&lt;/li&gt;
  &lt;li&gt;import문은 다른 패키지의 클래스를 사용할 때 필요하다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;mycompany 패키지에 소속된 클래스는 yourcompany에 옮겨 놓아도 동작한다.&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;mycompany 패키지에 소속된 클래스를 yourcompany에 파일만 옮긴다고 동작하지는 않는다.
패키지 라인명을 수정해야 한다.&lt;/p&gt;

&lt;h4 id=&quot;접근-제한에-대한-설명으로-틀린-것은&quot;&gt;접근 제한에 대한 설명으로 틀린 것은?&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;접근 제한자는 클래스, 필드, 생성자, 메소드의 사용을 제한한다.&lt;/li&gt;
  &lt;li&gt;public 접근 제한은 아무런 제한 없이 해당 요소를 사용할 수 있게 한다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;default 접근 제한은 해당 클래스 내부에서만 사용을 허가한다.&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;외부에서 접근하지 못하도록 하려면 private 접근을 해야 한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;default 접근 제한은 해당 패키지 내부에서의 사용을 허가한다.&lt;/p&gt;

&lt;h4 id=&quot;다음-클래스에서-해당-멤버가-필드-생성자-메소드-중-어떤-것인지-적으시오&quot;&gt;다음 클래스에서 해당 멤버가 필드, 생성자, 메소드 중 어떤 것인지 적으시오&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Field&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Constructor&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Method&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;아래-데이터를-가지는-member-클래스를-선언해보시오&quot;&gt;아래 데이터를 가지는 Member 클래스를 선언해보시오&lt;/h4&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;데이터 이름&lt;/td&gt;
      &lt;td&gt;필드 이름&lt;/td&gt;
      &lt;td&gt;타입&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;이름&lt;/td&gt;
      &lt;td&gt;name&lt;/td&gt;
      &lt;td&gt;문자열&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;아이디&lt;/td&gt;
      &lt;td&gt;id&lt;/td&gt;
      &lt;td&gt;문자열&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;패스워드&lt;/td&gt;
      &lt;td&gt;password&lt;/td&gt;
      &lt;td&gt;문자열&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;나이&lt;/td&gt;
      &lt;td&gt;age&lt;/td&gt;
      &lt;td&gt;정수&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;위-클래스에-name필드와-id-필드를-외부에서-받은-값으로-초기화-하는-생성자를-작성하시오&quot;&gt;위 클래스에 name필드와 id 필드를 외부에서 받은 값으로 초기화 하는 생성자를 작성하시오&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Member&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;memberservice-클래스에-아래-조건을-만족하도록-메소드를-작성하시오&quot;&gt;MemberService 클래스에 아래 조건을 만족하도록 메소드를 작성하시오&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;login() 메소드는 매개값으로 id, password를 제공&lt;/li&gt;
  &lt;li&gt;logout() 메소드는 id만 매개값으로 제공&lt;/li&gt;
  &lt;li&gt;login() 메소드는 id “hong”, password “12345”일 경우만 true, 그 외 false&lt;/li&gt;
  &lt;li&gt;logout() 메소드는 “로그아웃 되었습니다.”가 출력&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MemberService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hong&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;12345&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;로그아웃 되었습니다.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;printer-클래스에서-아래-조건을-만족하는-메소드를-작성하시오&quot;&gt;Printer 클래스에서 아래 조건을 만족하는 메소드를 작성하시오&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;println() 메소드는 매개값으로 int, boolean, double, String을 줄 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Printer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;위-printer-객체를-생성하지-않고-다른-클래스에서-호출할-수-있도록-작성하시오&quot;&gt;위 Printer 객체를 생성하지 않고 다른 클래스에서 호출할 수 있도록 작성하시오&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Printer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;shopservice-객체를-싱글톤으로-작성하시오&quot;&gt;ShopService 객체를 싱글톤으로 작성하시오&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ShopService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ShopService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ShopService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ShopService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ShopService&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;아래-조건을-만족하는-account-클래스를-작성하시오&quot;&gt;아래 조건을 만족하는 Account 클래스를 작성하시오&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;balance는 0 &amp;lt;= balance &amp;lt;= 1000000 범위만 가능하다.&lt;/li&gt;
  &lt;li&gt;외부에서 balance 필드를 마음대로 변경할 수 없다.&lt;/li&gt;
  &lt;li&gt;Setter, Getter를 이용한다.&lt;/li&gt;
  &lt;li&gt;0과 1000000은 MIN_BALANCE와 MAX_BALANCE 상수로 선언한다.&lt;/li&gt;
  &lt;li&gt;Setter의 매개값이 음수이거나 백만원을 초과하면 현재 balance를 유지한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Account&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIN_BALANCE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX_BALANCE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setBalance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX_BALANCE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MIN_BALANCE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;balance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getBalance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;balance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;책의-실행-결과를-보고-알맞게-bankapplication-클래스-메소드를-작성하시오&quot;&gt;책의 실행 결과를 보고 알맞게 BankApplication 클래스 메소드를 작성하시오&lt;/h4&gt;

&lt;p&gt;보류..&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BankApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//... 생략&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//계좌 생성&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createAccount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//계좌 목록보기&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;accountList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//예금하기&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;deposit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//출금하기&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;withdraw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//Account 배열에서 ano와 동일한 Account 객체 찾기&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Account&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findAccount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ano&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="java" /><summary type="html">클래스의 구성 멤버</summary></entry><entry><title type="html">[리뷰] 누구나 자료 구조와 알고리즘</title><link href="http://localhost:4000/book/data_structures&algorithm/" rel="alternate" type="text/html" title="[리뷰] 누구나 자료 구조와 알고리즘" /><published>2019-03-24T22:55:24+09:00</published><updated>2019-03-24T22:55:24+09:00</updated><id>http://localhost:4000/book/data_structures&amp;algorithm</id><content type="html" xml:base="http://localhost:4000/book/data_structures&amp;algorithm/">&lt;p&gt;&lt;img src=&quot;https://misc.ridibooks.com/cover/754024038/xxlarge&quot; alt=&quot;누구나 자료 구조와 알고리즘&quot; /&gt;&lt;/p&gt;

&lt;p&gt;내용 중 컴퓨터는 눈이 없기 때문에 차례대로 배열을 찾는다는 말이 너무 웃겼다.&lt;/p&gt;

&lt;p&gt;가볍게 읽기 좋은 책이다.&lt;br /&gt;
자료 구조에 대해서 전체적으로 훑어볼 필요가 있을 것 같아서 읽어본 책인데,&lt;br /&gt;
진짜 딱 전체적으로 가볍게 훑기 위한 용으로 사용하는 게 좋을 것 같다.&lt;/p&gt;

&lt;p&gt;루비나 파이썬으로 대부분의 예제를 설명하기 때문에&lt;br /&gt;
프로그래밍을 아예 모르는 사람은 읽기 어려울 수도 있을 것 같다.&lt;/p&gt;

&lt;p&gt;자료 구조를 좀 더 깊게 알려고 한다면 이 책보다는 다른 걸 활용하는 게 좋을 듯!&lt;br /&gt;
딱 이런게 자료 구조구나? 하는 느낌 정도를 주는 책이다.&lt;/p&gt;</content><author><name>2ssue</name><email>e2ssue@gmail.com</email></author><category term="review" /><summary type="html"></summary></entry></feed>